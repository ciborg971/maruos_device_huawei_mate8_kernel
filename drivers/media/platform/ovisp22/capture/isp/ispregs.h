#ifndef __ISPREGS_H__
#define __ISPREGS_H__


struct isp_reg_t isp_regs_list[] = {
	/* global */
	{0x65000, 0x00},// [0]AWB gain enable [1]Black pixel canceling enable DPC [2]White pixel canceling enable [3]Raw normal enable [4]Lens online control [5]Lens Shading Enable [6]Raw scale enable [7]binning corrention enable
	{0X65001, 0X00},//off recursive denoise
	{0x6502b, 0x00},//disable RGBH dns, enable jpeg ycbcr convertion matrix

	/* AEC */
	{0x1c594, 0x00},//AdvancedAecEnable
	{0x1c596, 0x00},//y-target-high
	{0x1c146, 0x00},//y-target
	{0x1c14a, 0x00},
	{0x1c14b, 0x00},
	{0x1c14c, 0x00},//aec fast step//
	{0x1c14e, 0x00},//slow step//08
	{0x1c140, 0x00},//banding enablec
	{0x1c13e, 0x00},//real gain mode for OV8830
	{0x66401, 0x00},//window weight
	{0x66402, 0x00},//StatWin_Left
	{0x66403, 0x00},
	{0x66404, 0x00},//StatWin_Top
	{0x66405, 0x00},
	{0x66406, 0x00},//StatWin_Right
	{0x66407, 0x00},
	{0x66408, 0x00}, //StatWin_Bottom
	{0x66409, 0x00}, //definiton ofthe center 3x3 window
	{0x6640a, 0x00}, //nWin_Left
	{0x6640d, 0x00},
	{0x6640e, 0x00}, //nWin_Top
	{0x66411, 0x00},
	{0x66412, 0x00}, //nWin_Width
	{0x66415, 0x00},
	{0x66416, 0x00}, //nWin_Height
	{0x6642e, 0x00},//nWin_Weight_0 weight pass
	{0x6642f, 0x00},//nWin_Weight_1
	{0x66430, 0x00},//nWin_Weight_2
	{0x66431, 0x00},//nWin_Weight_3
	{0x66432, 0x00},//nWin_Weight_4
	{0x66433, 0x00},//nWin_Weight_5
	{0x66434, 0x00},//nWin_Weight_6
	{0x66435, 0x00},//nWin_Weight_7
	{0x66436, 0x00},//nWin_Weight_8
	{0x66437, 0x00},//nWin_Weight_9
	{0x66438, 0x00},//nWin_Weight_10
	{0x66439, 0x00},//nWin_Weight_11
	{0x6643a, 0x00},//nWin_Weight_12
	{0x6644e, 0x00},//nWin_Weight_Shift
	{0x6644f, 0x00},//black level
	{0x66450, 0x00},//saturate level
	{0x6645b, 0x00},//black weight1
	{0x6645d, 0x00},//black weight2
	{0x66460, 0x00},//saturate per1
	{0x66464, 0x00},//saturate per2
	{0x66467, 0x00},//saturate weight1
	{0x66469, 0x00},//saturate weight2

	/*  auto level00 raw strech mode 2*/
	{0x66f00, 0x00},
	{0x66f01, 0x00},
	{0x66f02, 0x00},//minlowlevel = blc
	{0x66f03, 0x00},
	{0x66f04, 0x00},//maxlowlevel
	{0x66f05, 0x00},
	{0x66f06, 0x00},//high level = 255, disable high level

//CT-AWB
/* AWB */
	{0x66201, 0x00},//
	{0x66203, 0x00},//crop window
	{0x66211, 0x00},//awb top limit
	{0x66212, 0x00},//awb bottom limit

	{0x1c190, 0x00},//CT mode
	{0x1c19a, 0x00},
	{0x1c19b, 0x00},//MinNum
	{0x1c192, 0x00},//AWB Step

	{0x1c19c, 0x00},//AWB offset
	{0x1c19d, 0x00},
	{0x1c19e, 0x00},
	{0x1c19f, 0x00},

	{0x1c1a0, 0x00},//avg ALL enable
	{0x1c1a1, 0x00},//weight of A
	{0x1c1a2, 0x00},//d65
	{0x1c1a3, 0x00},//CWF

	{0x1c1c5, 0x00},//pre-gain
	{0x1c1c6, 0x00},
	{0x1c1c7, 0x00},

	{0x1d8e8, 0x00}, //0x01: Enable AWB Shift, 0x02: Enable Br Shift, 0x04: enable Multiple Map, turn off awb shift for test
        {0x1d8e9, 0x00}, //A low  B
        {0x1d8ea, 0x00}, //	 R
        {0x1dbfe, 0x00}, //A  high  B
        {0x1dbff, 0x00}, //A        R

        {0x1d8eb, 0x00}, //C low  B
        {0x1d8ec, 0x00}, //	 R
        {0x1d8f8, 0x00}, //C high B
        {0x1d8f9, 0x00}, //	 R

        {0x1d8ed, 0x00}, //D low  B
        {0x1d8ee, 0x00}, //	 R
        {0x1d8ef, 0x00}, //D high B
        {0x1d8f0, 0x00}, //	 R

        {0x1d8f4, 0x00}, //c indoor/outdoor switch lum 1
        {0x1d8f5, 0x00}, //c indoor/outdoor switch lum 1 nAWBBrTh2
        {0x1d8f6, 0x00}, //c indoor/outdoor switch lum 2
        {0x1d8f7, 0x00}, //c indoor/outdoor switch lum 2 nAWBBrTh3

        {0x1d8f1, 0x00}, //CT_A
        {0x1d8f2, 0x00}, //CT_C
        {0x1d8f3, 0x00}, //CT_D

        {0x1d908, 0x00}, //what?
        {0x1d909, 0x00},
        {0x1d8fa, 0x00},
        {0x1d8fb, 0x00},
        {0x1d8fc, 0x00},
        {0x1d8fd, 0x00},
        {0x1d8fe, 0x00}, //A high B
        {0x1d8ff, 0x00}, //	 R

        {0x1d900, 0x00}, //what?
        {0x1d901, 0x00},
        {0x1d902, 0x00},
        {0x1d903, 0x00},
        {0x1d904, 0x00},
        {0x1d905, 0x00},
        {0x1d906, 0x00},
        {0x1d907, 0x00},

        {0x1d90a, 0x00},
        {0x1d90b, 0x00},

        {0x1d8de, 0x00},
        {0x1d8df, 0x00},

	{0x66206, 0x00}, //center(cwf) window threshold D0
	{0x66207, 0x00}, //A threshold, range DX  0x15
	{0x66208, 0x00}, //day threshold, range DY 0xd
	{0x66209, 0x00}, //CWF X
	{0x6620a, 0x00}, //CWF Y
	{0x6620b, 0x00}, //K_A_X2Y, a slop
	{0x6620c, 0x00}, //K_D65_Y2X, d slop
	{0x6620d, 0x00}, //D65 Limit
	{0x6620e, 0x00}, //A Limit
	{0x6620f, 0x00}, //D65 split
	{0x66210, 0x00}, //A split

/* De-noise */
	{0x65604, 0x00},//Richard for new curve 0314
	{0x65605, 0x00},//Richard for new curve 0314
	{0x65606, 0x00},//Richard for new curve 0314
	{0x65607, 0x00},//Richard for new curve 0314

	{0x65510, 0x00}, //G dns slope change from 0x4 to 0xf Richard 0320
	{0x65511, 0x00}, //G dns slope change from 0x4 to 0xf Richard 0320
	{0x6551a, 0x00},//Raw G Dns improve white pixel 20120728
	{0x6551b, 0x00},//gain  2X
	{0x6551c, 0x00},//gain  4X
	{0x6551d, 0x00},//gain  8X
	{0x6551e, 0x00},//gain 16X
	{0x6551f, 0x00},//gain 32X
	{0x65520, 0x00},//gain 64X
	{0x65522, 0x00},//RAW BR De-noise
	{0x65523, 0x00},//gain 1X
	{0x65524, 0x00},
	{0x65525, 0x00},//gain 2X
	{0x65526, 0x00},
	{0x65527, 0x00},//gain 4X
	{0x65528, 0x00},
	{0x65529, 0x00},//gain 8X
	{0x6552a, 0x00},
	{0x6552b, 0x00},//gain 16X
	{0x6552c, 0x00},
	{0x6552d, 0x00},//gain 32X
	{0x6552e, 0x00},
	{0x6552f, 0x00},//gain 64X

	{0x65c00, 0x00},//UV De-noise: gain 1X
	{0x65c01, 0x00},//gain 2X
	{0x65c02, 0x00},//gain 4X
	{0x65c03, 0x00},//gain 8X
	{0x65c04, 0x00},//gain 16X
	{0x65c05, 0x00},//gain 32X

   //;Raw&UV Denoise Setting
	{0x67300 , 0x00},
	{0x67301 , 0x00},
	{0x67302 , 0x00},
	{0x67303 , 0x00},
	{0x67304 , 0x00},
	{0x67305 , 0x00},
	{0x67306 , 0x00},
	{0x67307 , 0x00},
	{0x67308 , 0x00},
	{0x67309 , 0x00},
	{0x6730a , 0x00},
	{0x6730b , 0x00},
	{0x6730c , 0x00},
	{0x6730d , 0x00},
	{0x6730e , 0x00},
	{0x6730f , 0x00},
	{0x67310 , 0x00},
	{0x67311 , 0x00},
	{0x65c00 , 0x00},
	{0x65c01 , 0x00},
	{0x65c02 , 0x00},
	{0x65c03 , 0x00},
	{0x65c04 , 0x00},
	{0x65c05 , 0x00},


/* dpc */
	{0x65409, 0x00},
	{0x6540a, 0x00},
	{0x6540b, 0x00},
	{0x6540c, 0x00},
	{0x6540d, 0x00},
	{0x6540e, 0x00},
	{0x6540f, 0x00},
	{0x65410, 0x00},
	{0x65408, 0x00},

/* sharpeness */
	{0x65600, 0x00},
	{0x65601, 0x00},//0319
	{0x65602, 0x00},
	{0x65603, 0x00},
	{0x65608, 0x00},
	{0x65609, 0x00},
	{0x6560c, 0x00},
	{0x6560d, 0x00}, //low gain sharpness, 20120814 0x20->0x30
	{0x6560e, 0x00},//MinSharpenTp
	{0x6560f, 0x00},//MaxSharpenTp
	{0x65610, 0x00},//MinSharpenTm
	{0x65611, 0x00},//MaxSharpenTm
	{0x65613, 0x00},//SharpenAlpha
	{0x65615, 0x00},//HFreq_thre
	{0x65617, 0x00},//HFreq_coef

/* auto uv saturation */ //modified by Richard for test
	{0x1c4e8, 0x00},//Enable
	{0x1c4e9, 0x00},// gain threshold1 40-->0b
	{0x1c4ea, 0x00},//gain threshold2 78-->0d
	{0x1c4eb, 0x00}, //keep back for new cmx 0310
	{0x1c4ec, 0x00}, //keep back for new cmx 0310

/* gamma */
	{0x1d984, 0x00}, //adaptive gamma,disable for test by Richard@07092013
	{0x1c49b, 0x00}, //ManualGamma enable //??

	{0x1c49c, 0x00}, //ManualGamma [15:8], gamma value = current value/256
	{0x1c49d, 0x00}, //ManualGamma [7:0]
	{0x1c49e, 0x00}, //RGB Gamma [15:8]
	{0x1c49f, 0x00}, //RGB Gamma [7:0] 	Manual gamma and RGB gamma should be same
	{0x1c4a2, 0x00}, //Max RGB Gamma Gain [15:8]//??? should be checked by Richard
	{0x1c4a3, 0x00}, //Max RGB Gamma Gain [7:0]//??? should be checked by Richard

	/* Tone Mapping curve */

	{0x1C4C0, 0x00},
	{0x1C4C1, 0x00},
	{0x1C4C2, 0x00},
	{0x1C4C3, 0x00},
	{0x1C4C4, 0x00},
	{0x1C4C5, 0x00},
	{0x1C4C6, 0x00},
	{0x1C4C7, 0x00},
	{0x1C4C8, 0x00},
	{0x1C4C9, 0x00},
	{0x1C4CA, 0x00},
	{0x1C4CB, 0x00},
	{0x1C4CC, 0x00},
	{0x1C4CD, 0x00},
	{0x1C4CE, 0x00},

	//=================EDR=============
	{0x1c4d4, 0x00},//EDR scale, disable edr with 0
	{0x1c4d5, 0x00},//EDR scale, disable edr with 0
	{0x1c4cf, 0x00},//disable edr with 0xff

	{0x65a00, 0x00}, //bit[4]¿ØÖÆRGB »¹ÊÇYUV  bi[0] h_dark_en
	{0x65a01, 0x00}, //h_dark_th[6:0]

/* LENC */
	{0x65102, 0x00},
	{0x65103, 0x00},
	{0x65104, 0x00},
	{0x65105, 0x00},
	{0x65106, 0x00},
	{0x65107, 0x00},
	{0x65108, 0x00},
	{0x65109, 0x00},

	{0x1c244, 0x00},
	{0x1c248, 0x00},//repeat
	{0x1c24a, 0x00},//repeat
	{0x1c24c, 0x00},//repeat
	{0x1c24d, 0x00},//repeat
	{0x1c24e, 0x00},//repeat
	{0x1c24f, 0x00},//repeat

	{0x1c245, 0x00},//three profile,color temperature based lens shading correction mode 1: enable 0: disable
	{0x1c24c, 0x00},
	{0x1c24d, 0x00},
	{0x1c24e, 0x00},
	{0x1c24f, 0x00},
	{0x1c248, 0x00},
	{0x1c24a, 0x00},

	{0x1c254, 0x00},//lens profile switch
	{0x1c255, 0x00},
	{0x1c256, 0x00},
	{0x1c257, 0x00},
	{0x1c258, 0x00},
	{0x1c259, 0x00},
	{0x1c25a, 0x00},
	{0x1c25b, 0x00},


	/* OVISP LENC setting for D65 Long Exposure (HDR/3D) */
	{0x1c264, 0x00},//Y1
	{0x1c265, 0x00},
	{0x1c266, 0x00},
	{0x1c267, 0x00},
	{0x1c268, 0x00},
	{0x1c269, 0x00},
	{0x1c26a, 0x00},//Y2
	{0x1c26b, 0x00},
	{0x1c26c, 0x00},
	{0x1c26d, 0x00},
	{0x1c26e, 0x00},
	{0x1c26f, 0x00},
	{0x1c270, 0x00},//Y3
	{0x1c271, 0x00},
	{0x1c272, 0x00},
	{0x1c273, 0x00},
	{0x1c274, 0x00},
	{0x1c275, 0x00},
	{0x1c276, 0x00},//Y4
	{0x1c277, 0x00},
	{0x1c278, 0x00},
	{0x1c279, 0x00},
	{0x1c27a, 0x00},
	{0x1c27b, 0x00},
	{0x1c27c, 0x00},//Y5
	{0x1c27d, 0x00},
	{0x1c27e, 0x00},
	{0x1c27f, 0x00},
	{0x1c280, 0x00},
	{0x1c281, 0x00},
	{0x1c282, 0x00},//Y6
	{0x1c283, 0x00},
	{0x1c284, 0x00},
	{0x1c285, 0x00},
	{0x1c286, 0x00},
	{0x1c287, 0x00},
	{0x1c288, 0x00},//Cb1
	{0x1c289, 0x00},
	{0x1c28a, 0x00},
	{0x1c28b, 0x00},
	{0x1c28c, 0x00},
	{0x1c28d, 0x00},//Cb2
	{0x1c28e, 0x00},
	{0x1c28f, 0x00},
	{0x1c290, 0x00},
	{0x1c291, 0x00},
	{0x1c292, 0x00},//Cb3
	{0x1c293, 0x00},
	{0x1c294, 0x00},
	{0x1c295, 0x00},
	{0x1c296, 0x00},
	{0x1c297, 0x00},//Cb4
	{0x1c298, 0x00},
	{0x1c299, 0x00},
	{0x1c29a, 0x00},
	{0x1c29b, 0x00},
	{0x1c29c, 0x00},//Cb5
	{0x1c29d, 0x00},
	{0x1c29e, 0x00},
	{0x1c29f, 0x00},
	{0x1c2a0, 0x00},
	{0x1c2a1, 0x00}, //Cr1
	{0x1c2a2, 0x00},
	{0x1c2a3, 0x00},
	{0x1c2a4, 0x00},
	{0x1c2a5, 0x00},
	{0x1c2a6, 0x00}, //Cr2
	{0x1c2a7, 0x00},
	{0x1c2a8, 0x00},
	{0x1c2a9, 0x00},
	{0x1c2aa, 0x00},
	{0x1c2ab, 0x00}, //Cr3
	{0x1c2ac, 0x00},
	{0x1c2ad, 0x00},
	{0x1c2ae, 0x00},
	{0x1c2af, 0x00},
	{0x1c2b0, 0x00}, //Cr4
	{0x1c2b1, 0x00},
	{0x1c2b2, 0x00},
	{0x1c2b3, 0x00},
	{0x1c2b4, 0x00},
	{0x1c2b5, 0x00}, //cr5
	{0x1c2b6, 0x00},
	{0x1c2b7, 0x00},
	{0x1c2b8, 0x00},
	{0x1c2b9, 0x00},

//add ccm detect parameter according 0x1c734~0x1c736
	{0x1c1c8 ,0x00}, //center CT, CWF
	{0x1c1c9 ,0x00},
	{0x1c1cc, 0x00},//daylight
	{0x1c1cd, 0x00},
	{0x1c1d0, 0x00},//a
	{0x1c1d1, 0x00},


/* Color matrix */
	{0x1C1d8, 0x00},//center matrix,
	{0x1C1d9, 0x00},
	{0x1C1da, 0x00},
	{0x1C1db, 0x00},
	{0x1C1dc, 0x00},
	{0x1C1dd, 0x00},
	{0x1C1de, 0x00},
	{0x1C1df, 0x00},
	{0x1C1e0, 0x00},
	{0x1C1e1, 0x00},
	{0x1C1e2, 0x00},
	{0x1C1e3, 0x00},
	{0x1C1e4, 0x00},
	{0x1C1e5, 0x00},
	{0x1C1e6, 0x00},
	{0x1C1e7, 0x00},
	{0x1C1e8, 0x00},
	{0x1C1e9, 0x00},

	{0x1C1FC, 0x00},//cmx left delta,daylight
	{0x1C1FD, 0x00},
	{0x1C1FE, 0x00},
	{0x1C1FF, 0x00},
	{0x1C200, 0x00},
	{0x1C201, 0x00},
	{0x1C202, 0x00},
	{0x1C203, 0x00},
	{0x1C204, 0x00},
	{0x1C205, 0x00},
	{0x1C206, 0x00},
	{0x1C207, 0x00},
	{0x1C208, 0x00},
	{0x1C209, 0x00},
	{0x1C20A, 0x00},
	{0x1C20B, 0x00},
	{0x1C20C, 0x00},
	{0x1C20D, 0x00},

	{0x1C220, 0x00},//cmx right delta,a light
	{0x1C221, 0x00},
	{0x1C222, 0x00},
	{0x1C223, 0x00},
	{0x1C224, 0x00},
	{0x1C225, 0x00},
	{0x1C226, 0x00},
	{0x1C227, 0x00},
	{0x1C228, 0x00},
	{0x1C229, 0x00},
	{0x1C22A, 0x00},
	{0x1C22B, 0x00},
	{0x1C22C, 0x00},
	{0x1C22D, 0x00},
	{0x1C22E, 0x00},
	{0x1C22F, 0x00},
	{0x1C230, 0x00},
	{0x1C231, 0x00},

        /*===========AF=======*/
        {0x1cd0a, 0x00},
  //===========BLC======
	{0x6500c, 0x00},
	{0x6500d, 0x00},
	{0x6500e, 0x00},
	{0x6500f, 0x00},

//;Awb Setting
	{0X1c190, 0X00},// ;//1, CT; 2, Curve
	{0X1d8e8, 0X00},// ;//0x01: Enable AWB Shift, 0x02: Enable Br Shift, 0x04: enable Multiple Map
	{0X1d914, 0X00},// ; //D65 weight
	{0X1d915, 0X00},// ; //CWF weight
	{0X1d916, 0X00},// ; //a weight
	//;//X_OFF
	{0X66280, 0X00},
	{0X66281, 0X00},
	//;//Y_OFF
	{0X66282, 0X00},
	{0X66283, 0X00},
	//KX
	{0X1d8e2, 0X00},
	{0X1d8e3, 0X00},
	//;//KY
	{0X1d8e4, 0X00},
	{0X1d8e5, 0X00},
	//;//LowMap
	{0X1d800, 0X00},
	{0X1d801, 0X00},
	{0X1d802, 0X00},
	{0X1d803, 0X00},
	{0X1d804, 0X00},
	{0X1d805, 0X00},
	{0X1d806, 0X00},
	{0X1d807, 0X00},
	{0X1d808, 0X00},
	{0X1d809, 0X00},
	{0X1d80a, 0X00},
	{0X1d80b, 0X00},
	{0X1d80c, 0X00},
	{0X1d80d, 0X00},
	{0X1d80e, 0X00},
	{0X1d80f, 0X00},
	{0X1d810, 0X00},
	{0X1d811, 0X00},
	{0X1d812, 0X00},
	{0X1d813, 0X00},
	{0X1d814, 0X00},
	{0X1d815, 0X00},
	{0X1d816, 0X00},
	{0X1d817, 0X00},
	{0X1d818, 0X00},
	{0X1d819, 0X00},
	{0X1d81a, 0X00},
	{0X1d81b, 0X00},
	{0X1d81c, 0X00},
	{0X1d81d, 0X00},
	{0X1d81e, 0X00},
	{0X1d81f, 0X00},
	{0X1d820, 0X00},
	{0X1d821, 0X00},
	{0X1d822, 0X00},
	{0X1d823, 0X00},
	{0X1d824, 0X00},
	{0X1d825, 0X00},
	{0X1d826, 0X00},
	{0X1d827, 0X00},
	{0X1d828, 0X00},
	{0X1d829, 0X00},
	{0X1d82a, 0X00},
	{0X1d82b, 0X00},
	{0X1d82c, 0X00},
	{0X1d82d, 0X00},
	{0X1d82e, 0X00},
	{0X1d82f, 0X00},
	{0X1d830, 0X00},
	{0X1d831, 0X00},
	{0X1d832, 0X00},
	{0X1d833, 0X00},
	{0X1d834, 0X00},
	{0X1d835, 0X00},
	{0X1d836, 0X00},
	{0X1d837, 0X00},
	{0X1d838, 0X00},
	{0X1d839, 0X00},
	{0X1d83a, 0X00},
	{0X1d83b, 0X00},
	{0X1d83c, 0X00},
	{0X1d83d, 0X00},
	{0X1d83e, 0X00},
	{0X1d83f, 0X00},
	{0X1d840, 0X00},
	{0X1d841, 0X00},
	{0X1d842, 0X00},
	{0X1d843, 0X00},
	{0X1d844, 0X00},
	{0X1d845, 0X00},
	{0X1d846, 0X00},
	{0X1d847, 0X00},
	{0X1d848, 0X00},
	{0X1d849, 0X00},
	{0X1d84a, 0X00},
	{0X1d84b, 0X00},
	{0X1d84c, 0X00},
	{0X1d84d, 0X00},
	{0X1d84e, 0X00},
	{0X1d84f, 0X00},
	{0X1d850, 0X00},
	{0X1d851, 0X00},
	{0X1d852, 0X00},
	{0X1d853, 0X00},
	{0X1d854, 0X00},
	{0X1d855, 0X00},
	{0X1d856, 0X00},
	{0X1d857, 0X00},
	{0X1d858, 0X00},
	{0X1d859, 0X00},
	{0X1d85a, 0X00},
	{0X1d85b, 0X00},
	{0X1d85c, 0X00},
	{0X1d85d, 0X00},
	{0X1d85e, 0X00},
	{0X1d85f, 0X00},
	{0X1d860, 0X00},
	{0X1d861, 0X00},
	{0X1d862, 0X00},
	{0X1d863, 0X00},
	{0X1d864, 0X00},
	{0X1d865, 0X00},
	{0X1d866, 0X00},
	{0X1d867, 0X00},
	{0X1d868, 0X00},
	{0X1d869, 0X00},
	{0X1d86a, 0X00},
	{0X1d86b, 0X00},
	{0X1d86c, 0X00},
	{0X1d86d, 0X00},
	{0X1d86e, 0X00},
	{0X1d86f, 0X00},
	{0X1d870, 0X00},
	{0X1d871, 0X00},
	{0X1d872, 0X00},
	{0X1d873, 0X00},
	{0X1d874, 0X00},
	{0X1d875, 0X00},
	{0X1d876, 0X00},
	{0X1d877, 0X00},
	{0X1d878, 0X00},
	{0X1d879, 0X00},
	{0X1d87a, 0X00},
	{0X1d87b, 0X00},
	{0X1d87c, 0X00},
	{0X1d87d, 0X00},
	{0X1d87e, 0x00},
	{0X1d87f, 0x00},
	//;//MiddleMask  ,
	{0X1d880, 0x00},
	{0X1d881, 0x00},
	{0X1d882, 0x00},
	{0X1d883, 0x00},
	{0X1d884, 0x00},
	{0X1d885, 0x00},
	{0X1d886, 0x00},
	{0X1d887, 0x00},
	{0X1d888, 0x00},
	{0X1d889, 0x00},
	{0X1d88a, 0x00},
	{0X1d88b, 0x00},
	{0X1d88c, 0x00},
	{0X1d88d, 0x00},
	{0X1d88e, 0x00},
	{0X1d88f, 0x00},
	{0X1d890, 0x00},
	{0X1d891, 0x00},
	{0X1d892, 0x00},
	{0X1d893, 0x00},
	{0X1d894, 0x00},
	{0X1d895, 0x00},
	{0X1d896, 0x00},
	{0X1d897, 0x00},
	{0X1d898, 0x00},
	{0X1d899, 0x00},
	{0X1d89a, 0x00},
	{0X1d89b, 0x00},
	{0X1d89c, 0x00},
	{0X1d89d, 0x00},
	{0X1d89e, 0x00},
	{0X1d89f, 0x00},
	//;//HighMask    ,
	{0X1d8a0, 0x00},
	{0X1d8a1, 0x00},
	{0X1d8a2, 0x00},
	{0X1d8a3, 0x00},
	{0X1d8a4, 0x00},
	{0X1d8a5, 0x00},
	{0X1d8a6, 0x00},
	{0X1d8a7, 0x00},
	{0X1d8a8, 0x00},
	{0X1d8a9, 0x00},
	{0X1d8aa, 0x00},
	{0X1d8ab, 0x00},
	{0X1d8ac, 0x00},
	{0X1d8ad, 0x00},
	{0X1d8ae, 0x00},
	{0X1d8af, 0x00},
	{0X1d8b0, 0x00},
	{0X1d8b1, 0x00},
	{0X1d8b2, 0X00},
	{0X1d8b3, 0X00},
	{0X1d8b4, 0X00},
	{0X1d8b5, 0X00},
	{0X1d8b6, 0X00},
	{0X1d8b7, 0X00},
	{0X1d8b8, 0X00},
	{0X1d8b9, 0X00},
	{0X1d8ba, 0X00},
	{0X1d8bb, 0X00},
	{0X1d8bc, 0X00},
	{0X1d8bd, 0X00},
	{0X1d8be, 0X00},
	{0X1d8bf, 0X00},
	//;//======for AWB shift======
	{0X1d8ed, 0X00},
	{0X1d8ee, 0X00},
	{0X1d8eb, 0X00},
	{0X1d8ec, 0X00},
	{0X1d8e9, 0X00},
	{0X1d8ea, 0X00},
	{0X1d8ef, 0X00},
	{0X1d8f0, 0X00},
	{0X1d8f8, 0X00},
	{0X1d8f9, 0X00},
	{0X1d8fe, 0X00},
	{0X1d8ff, 0X00},
	//;//====AWB shift End=====
};

#endif

