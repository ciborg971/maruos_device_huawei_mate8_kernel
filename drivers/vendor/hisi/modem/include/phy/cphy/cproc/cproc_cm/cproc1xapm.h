/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2014

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2014-12-19
 * @file
 * @brief
 * This is the interface between APM and CPROC_1X, regarding boot information
 * and activation. Boot information is e.g. NV.
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef CPROC1XAPM_H
#define CPROC1XAPM_H

/*******************************************************************************
 1. Other files included
*******************************************************************************/

#include "uphy_type_define.h"

#ifdef __cplusplus
#if __cplusplus
    extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/


/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CPROC1XAPM_MSG_TYPE_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum CPROC1XAPM_MSG_TYPE_ENUM
{
    ID_APM_CPROC_1X_BOOT_INFO_REQ       = 0x0000, /**< @sa APM_CPROC_1X_BOOT_INFO_REQ_STRU */
    ID_CPROC_APM_1X_BOOT_INFO_IND       = 0x0001, /**< @sa CPROC_APM_1X_BOOT_INFO_IND_STRU */
    ID_APM_CPROC_1X_ACTIVE_REQ          = 0x0002, /**< @sa APM_CPROC_1X_ACTIVE_REQ_STRU */
    ID_CPROC_APM_1X_ACTIVE_IND          = 0x0003, /**< @sa CPROC_APM_1X_ACTIVE_IND_STRU */
    ID_CPROC1XAPM_MSG_TYPE_ENUM_BUTT    = 0xFFFF
};
typedef PHY_UINT16 CPROC1XAPM_MSG_TYPE_ENUM_UINT16;

/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/

/*******************************************************************************
 6. STRUCT and UNION declaration
*******************************************************************************/

/** ****************************************************************************
 * Name        : CPROC_1X_BOOT_INFO_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    PHY_UINT16                          uhwReserved; /**< 32 bit alignment */
    PHY_UINT16                          uhwLength;   /**< Length of the boot information item */
    PHY_UINT32                          uwAddress;   /**< Address where to put the boot information item */
} CPROC_1X_BOOT_INFO_STRU;

/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : APM_CPROC_1X_BOOT_INFO_REQ_STRU
 *
 * Description : APM_CPROC_1X_BOOT_INFO_REQ is used to request addresses to
 * put static boot information for CPHY.
 * The message does not contain any parameters.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC1XAPM_MSG_TYPE_ENUM_UINT16     enMsgId;
    PHY_UINT16                          uhwOpId;
} APM_CPROC_1X_BOOT_INFO_REQ_STRU;

/** ****************************************************************************
 * Name        : CPROC_APM_1X_BOOT_INFO_IND_STRU
 *
 * Description : CPROC_APM_1X_BOOT_INFO_IND carries information on where to
 * put CPHY boot information.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC1XAPM_MSG_TYPE_ENUM_UINT16     enMsgId;
    PHY_UINT16                          uhwOpId;
    CPROC_1X_BOOT_INFO_STRU             stCprocNv;
    CPROC_1X_BOOT_INFO_STRU             stCsdrNv;
} CPROC_APM_1X_BOOT_INFO_IND_STRU;

/** ****************************************************************************
 * Name        : APM_CPROC_1X_ACTIVE_REQ_STRU
 *
 * Description : APM_CPROC_1X_ACTIVE_REQ requests CPHY to activate when the
 * boot information is in place. it carries no parameters.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC1XAPM_MSG_TYPE_ENUM_UINT16     enMsgId;
    PHY_UINT16                          uhwOpId;
} APM_CPROC_1X_ACTIVE_REQ_STRU;

/** ****************************************************************************
 * Name        : CPROC_APM_1X_ACTIVE_IND_STRU
 *
 * Description : CPROC_APM_1X_ACTIVE_IND tells APM that CPHY has activated
 * according to the request.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC1XAPM_MSG_TYPE_ENUM_UINT16     enMsgId;
    PHY_UINT16                          uhwOpId;
    PHY_UINT16                          uhwReserved;
    PHY_UINT16                          uhwResult;
} CPROC_APM_1X_ACTIVE_IND_STRU;

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*******************************************************************************
 9. Function declarations
*******************************************************************************/

#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */

#endif
