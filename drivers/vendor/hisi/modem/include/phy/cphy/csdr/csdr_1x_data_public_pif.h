/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2015

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2015-08-28
 * @file
 * @brief
 * These container defines public structures used by both csdr_1x_decdata_pif.h
 * and csdr_1x_encdata_pif.h. We keep its name with the suffix _pif, because we
 * want to generate this interface file with _pif in its name.
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef CSDR_1X_DATA_PUBLIC_PIF_H
#define CSDR_1X_DATA_PUBLIC_PIF_H

/*******************************************************************************
 1. Other files included
*******************************************************************************/

#include "vos.h"
#include "csdr_ddr_ram_ext.h"


#ifdef __cplusplus
#if __cplusplus
    extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/

/**
 * It indicates SDR has not finished address initialization
 */
#define CTTF_CSDR_1X_ADDR_MAGIC_NOT_READY                   ( 0xD22D2DD2 )
/**
 * It indicates SDR has finished address initialization
 */
#define CTTF_CSDR_1X_ADDR_MAGIC_READY                       ( 0x78878778 )
/**
 * This macro is used to calculate how many memory are occupied, from 16-bit
 * size to 8-bit size.
 */
#define CTTF_CSDR_1X_MEMORY_OCCUPIED(SIZE_16BIT_NUM)        ( (SIZE_16BIT_NUM) << 1 )

/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CSDR_1X_FRAME_DURATION_ENUM_UINT16
 *
 * Description : 5ms, 10ms, 20ms, 40ms, 80ms, 160ms
 *******************************************************************************/
enum CSDR_1X_FRAME_DURATION_ENUM
{
    CSDR_1X_FRAME_DURATION_5MS          = 0x0000,
    CSDR_1X_FRAME_DURATION_10MS         = 0x0001,
    CSDR_1X_FRAME_DURATION_20MS         = 0x0002,
    CSDR_1X_FRAME_DURATION_40MS         = 0x0003,
    CSDR_1X_FRAME_DURATION_80MS         = 0x0004,
    CSDR_1X_FRAME_DURATION_160MS        = 0x0005,
    CSDR_1X_FRAME_DURATION_BUTT         = 0x0006
};
typedef VOS_UINT16 CSDR_1X_FRAME_DURATION_ENUM_UINT16;

/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/

/*******************************************************************************
 6. STRUCT and UNION declaration
*******************************************************************************/

/** ****************************************************************************
 * Name        : CTTF_CSDR_1X_ADDR_INFO_STRU
 *
 * Description : @ulMagicNum: magic number is used to do synchronizing between
 * 1x SDR and MAC,
 * when MS power-on, SDR will set it to not ready at first, and then set
 * addresses below, at last set magic number to ready
 * it's not allowed MAC to read addresses, until magic number turns to ready
 * All address will be initialed by SDR only when MS power-on
 * @ulFCtrlMgmtAddr: start address of CSDR_CTTF_1X_F_CTRL_MGMT_STRU
 * @ulRCtrlMgmtAddr: start address of CTTF_CSDR_1X_R_CTRL_MGMT_STRU
 *
 *******************************************************************************/
typedef struct
{
    VOS_UINT32                          ulMagicNum;
    VOS_UINT32                          ulFCtrlMgmtAddr;
    VOS_UINT32                          ulRCtrlMgmtAddr;
    VOS_UINT32                          aulReserve[2];
} CTTF_CSDR_1X_ADDR_INFO_STRU;

/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*******************************************************************************
 9. Function declarations
*******************************************************************************/

#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */

#endif
