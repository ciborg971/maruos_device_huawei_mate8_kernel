/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2015

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2015-08-04
 * @file
 * @brief
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef CSDR1X_H
#define CSDR1X_H

/*******************************************************************************
 1. Other files included
*******************************************************************************/

#include "uphy_type_define.h"

#ifdef __cplusplus
#if __cplusplus
    extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/

#define CSDR_1X_PN_INDEX_NOT_KNOWN      ( 0x0 )
/**
 * Used on 16 bit active times to request immediate activation.
 */
#define CSDR_1X_ACTIVATE_AT_ONCE        ( 0xFFFF )
/**
 * Maximum number of pilots in the active set.
 */
#define CSDR_1X_MAX_ACTIVE_SET_NUM      ( 6 )
typedef PHY_UINT32 PHY_ACTION_TIME_CHIP_32;

/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CSDR_1X_WORK_MODE_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum CSDR_1X_WORK_MODE_ENUM
{
    CSDR_1X_WORK_MODE_SLAVE             = 0x0000,
    CSDR_1X_WORK_MODE_MASTER            = 0x0001,
    CSDR_1X_WORK_MODE_CT                = 0x0002
};
typedef PHY_UINT16 CSDR_1X_WORK_MODE_ENUM_UINT16;

/** ****************************************************************************
 * Name        : CSDR_1X_ANTENNA_IND_ENUM_UINT16
 *
 * Description : Is this needed?
 *******************************************************************************/
enum CSDR_1X_ANTENNA_IND_ENUM
{
    CSDR_1X_ANTENNA_IND_MAIN                                = 0x0000,
    CSDR_1X_ANTENNA_IND_DIVERSITY                           = 0x0001,
    CSDR_1X_ANTENNA_IND_MAIN_AND_DIVERSITY                  = 0x0002,
    CSDR_1X_ANTENNA_IND_BUTT                                = 0x0003
};
typedef PHY_UINT16 CSDR_1X_ANTENNA_IND_ENUM_UINT16;

/** ****************************************************************************
 * Name        : CSDR_1X_SUCCESS_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum CSDR_1X_SUCCESS_ENUM
{
    CSDR_1X_SUCCESS                     = 0x0000,
    CSDR_1X_FAILURE                     = 0x0001,
    CSDR_1X_SUCCESS_BUTT                = 0x0002
};
typedef PHY_UINT16 CSDR_1X_SUCCESS_ENUM_UINT16;

/** ****************************************************************************
 * Name        : CSDR_1X_BOOL_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum CSDR_1X_BOOL_ENUM
{
    CSDR_1X_FALSE                       = 0x0000,
    CSDR_1X_TRUE                        = 0x0001,
    CSDR_1X_BOOL_BUTT                   = 0x0002
};
typedef PHY_UINT16 CSDR_1X_BOOL_ENUM_UINT16;

/** ****************************************************************************
 * Name        : CSDR_1X_SWITCH_USE_ENUM_UINT16
 *
 * Description : CSDR_1X_SWITCH_USE_ENUM_UINT16 tells CSDR if it is allowed to
 * change the position of the DPDT switch or not.
 *******************************************************************************/
enum CSDR_1X_SWITCH_USE_ENUM
{
    CSDR_1X_SWITCH_USE_NO_SWITCH        = 0x0000,
    CSDR_1X_SWITCH_USE_SWITCH           = 0x0001,
    CSDR_1X_SWITCH_USE_BUTT             = 0x0002
};
typedef PHY_UINT16 CSDR_1X_SWITCH_USE_ENUM_UINT16;

/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/

/*******************************************************************************
 6. STRUCT and UNION declaration
*******************************************************************************/

/** ****************************************************************************
 * Name        : CSDR_1X_FREQ_INFO_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    PHY_UINT16                          uhwBandClass; /**< 0..31 BAND_CLASS */
    PHY_UINT16                          uhwFreq;      /**< 0..2047, CDMA_FREQ */
} CSDR_1X_FREQ_INFO_STRU;

/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*******************************************************************************
 9. Function declarations
*******************************************************************************/

#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */

#endif
