/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2011

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2014-10-24
 * @file
 * @brief
 * It defines public structures or functions using between PPP and RLP.
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef RLP_TRANS_DATA_PIF_H
#define RLP_TRANS_DATA_PIF_H


/*******************************************************************************
 1. Other files included
*******************************************************************************/
#include "vos.h"
#include "TtfDrvInterface.h"
#include "TTFLink.h"
#include "cds_trans_data_pif.h"
#include "TtfIpComm.h"
#include "Cttf_ppp_trace_info_pif.h"

#ifdef __cplusplus
#if __cplusplus
    extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/


/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/

/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/

/*******************************************************************************
 6. STRUCT and UNION declaration
*******************************************************************************/

/** ****************************************************************************
 * Name        : PPP_RLP_1X_TRANS_DATA_STRU
 *
 * Description : This structure contains properties of the SDU delivered
 * to RLP from PPP.It will be used in 1X mode.
 * @ucPdnId : At present, this is always 5. Needs to check with NAS/CDS how
 * this value is different from Connection Referecen.
 * @enIpDataType : PPP will parse Ip packet to get data type for rrlp.
 * @ucTotalPppFrgmt : PPP may segment its packet and send one fragment once,
                        it is to represent total fragments.
 * @ucCurrPppFrgmt : PPP may segment its packet and send one fragment once,
                        it is to represent current fragment.
 * @ulSduLen : SDU length in bytes
 * @pstSdu : pointer to SDU structure
 * @stUlDataInfo : data info of cds
 *******************************************************************************/
typedef struct
{
    VOS_UINT8                           ucPdnId;
    IP_DATA_TYPE_ENUM_UINT8             enIpDataType;
    VOS_UINT8                           ucTotalPppFrgmt;
    VOS_UINT8                           ucCurrPppFrgmt;
    VOS_UINT32                          ulSduLen;
    TTF_MEM_ST                         *pstSdu;/* _H2ASN_Replace VOS_UINT32 *pstSdu */
    PS_DATA_EXT_INFO_STRU               stUlDataInfo;
}PPP_RLP_1X_TRANS_DATA_STRU;

/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*******************************************************************************
 9. Function declarations
*******************************************************************************/

#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */


#endif
