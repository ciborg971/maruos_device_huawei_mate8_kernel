/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2015

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2015-05-22
 * @file
 * @brief
 * This is the public interface provided to Layer_3_NAS
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef CAS_1X_CONTROL_MAIN_NAS_PIF_H
#define CAS_1X_CONTROL_MAIN_NAS_PIF_H

/*******************************************************************************
 1. Other files included
*******************************************************************************/

#include "vos.h"
#include "cas_1x_access_ctrl_proc_nas_pif.h"
#include "PsTypeDef.h"

#ifdef __cplusplus
#if __cplusplus
    extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/

#define CNAS_CAS_1X_MAX_AUTH_DIGIT_NUM                      ( 3 )
#define CAS_CNAS_1X_CC_MAX_NUM                              ( 3 )

/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM
{
    ID_CAS_CNAS_1X_CAS_STATE_IND                            = 0x6000, /**< @sa CAS_CNAS_1X_CAS_STATE_IND_STRU */
    ID_CAS_CNAS_1X_ENCRYPT_FAIL_IND                         = 0x6001, /**< @sa CAS_CNAS_1X_ENCRYPT_FAIL_IND_STRU */
    ID_CAS_CNAS_1X_TMSI_TIMER_EXPIRED_IND                   = 0x6002, /**< @sa CAS_CNAS_1X_TMSI_TIMER_EXPIRED_IND_STRU */
    ID_CNAS_CAS_1X_POWER_OFF_REQ                            = 0x6003, /**< @sa CNAS_CAS_1X_POWER_OFF_REQ_STRU */
    ID_CAS_CNAS_1X_POWER_OFF_CNF                            = 0x6004, /**< @sa CAS_CNAS_1X_POWER_OFF_CNF_STRU */
    ID_CNAS_CAS_1X_DSCH_DATA_REQ                            = 0x6005, /**< @sa CNAS_CAS_1X_DSCH_DATA_REQ_STRU */
    ID_CAS_CNAS_1X_DSCH_DATA_CNF                            = 0x6006, /**< @sa CAS_CNAS_1X_DSCH_DATA_CNF_STRU */
    ID_CAS_CNAS_1X_DSCH_DATA_IND                            = 0x6007, /**< @sa CAS_CNAS_1X_DSCH_DATA_IND_STRU */
    ID_CNAS_CAS_1X_CSCH_DATA_REQ                            = 0x6008, /**< @sa CNAS_CAS_1X_CSCH_DATA_REQ_STRU */
    ID_CAS_CNAS_1X_CALL_REL_IND                             = 0x6009, /**< @sa CAS_CNAS_1X_CALL_REL_IND_STRU */
    ID_CAS_CNAS_1X_CSCH_DATA_CNF                            = 0x600A, /**< @sa CAS_CNAS_1X_CSCH_DATA_CNF_STRU */
    ID_CAS_CNAS_1X_CSCH_DATA_IND                            = 0x600B, /**< @sa CAS_CNAS_1X_CSCH_DATA_IND_STRU */
    ID_CNAS_CAS_1X_CALL_REL_REQ                             = 0x600C, /**< @sa CNAS_CAS_1X_CALL_REL_REQ_STRU */
    ID_CAS_CNAS_1X_CALL_TERMINATE_IND                       = 0x600D, /**< @sa CAS_CNAS_1X_CALL_TERMINATE_IND_STRU */
    ID_CAS_CNAS_1X_PAGING_IND                               = 0x600E, /**< @sa CAS_CNAS_1X_PAGING_IND_STRU */
    ID_CAS_CNAS_1X_PARA_NOT_CURRENT_IND                     = 0x600F, /**< @sa CAS_CNAS_1X_PARA_NOT_CURRENT_IND_STRU */
    ID_CNAS_CAS_1X_LONG_CODE_TRANSITION_NTF                 = 0x6010, /**< @sa CNAS_CAS_1X_LONG_CODE_TRANSITION_NTF_STRU */
    ID_CAS_CNAS_1X_POWEROFF_REL_ORDER_SND_NTF               = 0x6011, /**< @sa CAS_CNAS_1X_POWEROFF_REL_ORDER_SND_NTF_STRU */
    ID_CAS_CNAS_1X_SMS_ABORT_IND                            = 0x6012, /**< @sa CAS_CNAS_1X_SMS_ABORT_IND_STRU */
    ID_CNAS_CAS_1X_SET_SIGNAL_QUALITY_REQ                   = 0x6013, /**< @sa CNAS_CAS_1X_SET_SIGNAL_QUALITY_REQ_STRU */
    ID_CAS_CNAS_1X_SET_SIGNAL_QUALITY_CNF                   = 0x6014, /**< @sa CAS_CNAS_1X_SET_SIGNAL_QUALITY_CNF_STRU */
    ID_CAS_CNAS_1X_SIGNAL_QUALITY_IND                       = 0x6015, /**< @sa CAS_CNAS_1X_SIGNAL_QUALITY_IND_STRU */
    ID_CNAS_CAS_1X_FREQ_LOCK_NTF                            = 0x6016, /**< @sa CNAS_CAS_1X_FREQ_LOCK_NTF_STRU */
    ID_CAS_CNAS_1X_MAINTENANCE_REASON_IND                   = 0x6017, /**< @sa CAS_CNAS_1X_MAINTENANCE_REASON_IND_STRU */
    ID_CNAS_CAS_1X_OOC_NTF                                  = 0x6018, /**< @sa CNAS_CAS_1X_OOC_NTF_STRU */
    ID_CNAS_CAS_1X_SESSION_BEGIN_NTF                        = 0x6019, /**< @sa CNAS_CAS_1X_SESSION_BEGIN_NTF_STRU */
    ID_CNAS_CAS_1X_SESSION_END_NTF                          = 0x601A, /**< @sa CNAS_CAS_1X_SESSION_END_NTF_STRU */
    ID_CNAS_CAS_1X_SUSPEND_REQ                              = 0x601B, /**< @sa CNAS_CAS_1X_SUSPEND_REQ_STRU */
    ID_CAS_CNAS_1X_SUSPEND_CNF                              = 0x601C, /**< @sa CAS_CNAS_1X_SUSPEND_CNF_STRU */
    ID_CAS_CNAS_1X_P_VER_IND                                = 0x601D, /**< @sa CAS_CNAS_1X_P_VER_IND_STRU */
    ID_CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_BUTT       = 0xFFFF
};
typedef VOS_UINT16 CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_CAS_P_REV_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_1X_CAS_P_REV_ENUM
{
    CAS_CNAS_1X_CAS_P_REV_JST_008       = 0x01,
    CAS_CNAS_1X_CAS_P_REV_IS_95         = 0x02,
    CAS_CNAS_1X_CAS_P_REV_IS_95A        = 0x03,
    CAS_CNAS_1X_CAS_P_REV_IS_95B_CUSTOM = 0x04,
    CAS_CNAS_1X_CAS_P_REV_IS_95B        = 0x05,
    CAS_CNAS_1X_CAS_P_REV_IS_2000       = 0x06,
    CAS_CNAS_1X_CAS_P_REV_IS_2000A      = 0x07,
    CAS_CNAS_1X_CAS_P_REV_ENUM_BUTT     = 0x08
};
typedef VOS_UINT8 CAS_CNAS_1X_CAS_P_REV_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_CAS_SUB_STATE_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_1X_CAS_SUB_STATE_ENUM
{
    CAS_CNAS_1X_CAS_SUB_STATE_NULL                          = 0x00,
    CAS_CNAS_1X_CAS_INIT_DETERM_SUB_STATE                   = 0x01,
    CAS_CNAS_1X_CAS_PILOT_CH_ACQ_SUB_STATE                  = 0x02,
    CAS_CNAS_1X_CAS_SYNC_CH_ACQ_SUB_STATE                   = 0x03,
    CAS_CNAS_1X_CAS_TIMING_CHNG_SUB_STATE                   = 0x04,
    CAS_CNAS_1X_CAS_IDLE_SUB_STATE                          = 0x10,
    CAS_CNAS_1X_CAS_UPDATE_OVERHEAD_SUB_STATE               = 0x20,
    CAS_CNAS_1X_CAS_MOB_STATION_ORIG_ATTEMPT_SUB_STATE      = 0x21,
    CAS_CNAS_1X_CAS_PAG_RESP_SUB_STATE                      = 0x22,
    CAS_CNAS_1X_CAS_MOB_STATION_ORDR_RESP_SUB_STATE         = 0x23,
    CAS_CNAS_1X_CAS_REG_ACCESS_SUB_STATE                    = 0x24,
    CAS_CNAS_1X_CAS_MOB_STATION_MSG_TRANS_SUB_STATE         = 0x25,
    CAS_CNAS_1X_CAS_TCH_INIT_SUB_STATE                      = 0x30,
    CAS_CNAS_1X_CAS_REL_SUB_STATE                           = 0x31,
    CAS_CNAS_1X_CAS_WAIT_FOR_SERVICE_SUB_STATE              = 0x40,
    CAS_CNAS_1X_CAS_SUB_STATE_ENUM_BUTT                     = 0x41
};
typedef VOS_UINT8 CAS_CNAS_1X_CAS_SUB_STATE_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CNAS_CAS_1X_SESSION_TYPE_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum CNAS_CAS_1X_SESSION_TYPE_ENUM
{
    CNAS_CAS_1X_SESSION_TYPE_NETWORK_SEARCH                 = 0x0000,
    CNAS_CAS_1X_SESSION_TYPE_REG                            = 0x0001,
    CNAS_CAS_1X_SESSION_TYPE_PS_CALL                        = 0x0002,
    CNAS_CAS_1X_SESSION_TYPE_CS_CALL                        = 0x0003,
    CNAS_CAS_1X_SESSION_TYPE_SIG                            = 0x0004,
    CNAS_CAS_1X_SESSION_TYPE_SMS                            = 0x0005,
    /* Added by y00314741 for AGPS_PROJECT, 2015-8-31, begin */
    CNAS_CAS_1X_SESSION_TYPE_AGPS                           = 0x0006,
    /* Added by y00314741 for AGPS_PROJECT, 2015-8-31, end */

    CNAS_CAS_1X_SESSION_TYPE_ENUM_BUTT
};
typedef VOS_UINT16 CNAS_CAS_1X_SESSION_TYPE_ENUM_UINT16;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_MSG_DATA_TYPE_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_1X_MSG_DATA_TYPE_ENUM
{
    CAS_CNAS_1X_DATA_TYPE_REQUEST       = 0x00,
    CAS_CNAS_1X_DATA_TYPE_RESPONSE      = 0x01,
    CAS_CNAS_1X_MSG_DATA_TYPE_ENUM_BUTT = 0x02
};
typedef VOS_UINT8 CAS_CNAS_1X_MSG_DATA_TYPE_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_FREQ_LOCK_MODE_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_1X_FREQ_LOCK_MODE_ENUM
{
    CAS_CNAS_1X_FREQ_LOCK_MODE_DISABLE  = 0x0000,
    CAS_CNAS_1X_FREQ_LOCK_MODE_ENABLE   = 0x0001,
    CAS_CNAS_1X_FREQ_LOCK_MODE_ENUM_BUTT= 0x0002
};
typedef VOS_UINT16 CAS_CNAS_1X_FREQ_LOCK_MODE_ENUM_UINT16;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_DATA_BURST_TYPE_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_1X_DATA_BURST_TYPE_ENUM
{
    CNAS_1X_UNKNOW_DATA_BURST_TYPE                          = 0x00,
    CNAS_1X_ASYN_DATA_SERVICE_BURST_TYPE                    = 0x01,
    CNAS_1X_SMS_DATA_BURST_TYPE                             = 0x06,
    CNAS_1X_DATA_BURST_TYPE_BUTT                            = 0x07
};
typedef VOS_UINT8 CAS_CNAS_1X_DATA_BURST_TYPE_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_SIGNAL_QUALITY_CNF_RSLT_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_1X_SIGNAL_QUALITY_CNF_RSLT_ENUM
{
    CAS_CNAS_1X_SIGNAL_QUALITY_CNF_RSLT_SUCCESS             = 0x00,
    CAS_CNAS_1X_SIGNAL_QUALITY_CNF_RSLT_FAIL                = 0x01,
    CAS_CNAS_1X_SIGNAL_QUALITY_CNF_RSLT_ENUM_BUTT           = 0x02
};
typedef VOS_UINT8 CAS_CNAS_1X_SIGNAL_QUALITY_CNF_RSLT_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_TERMINATE_REASON_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_1X_TERMINATE_REASON_ENUM
{
    CAS_CNAS_1X_TERMINATE_REASON_MS_END                     = 0x00,
    CAS_CNAS_1X_TERMINATE_REASON_RELEASE_TIME_OUT           = 0x01,
    CAS_CNAS_1X_TERMINATE_REASON_REDIRECTION                = 0x02,
    CAS_CNAS_1X_TERMINATE_REASON_LOCK                       = 0x03,
    CAS_CNAS_1X_TERMINATE_REASON_SO_REJ                     = 0x04,
    CAS_CNAS_1X_TERMINATE_REASON_NW_NORMAL_END              = 0x05,
    CAS_CNAS_1X_TERMINATE_REASON_CHANNEL_ASSIGN_TIMEOUT     = 0x06,
    CAS_CNAS_1X_TERMINATE_REASON_INTERCEPT                  = 0x07,
    CAS_CNAS_1X_TERMINATE_REASON_NO_RF                      = 0x08,
    CAS_CNAS_1X_TERMINATE_REASON_BUTT                       = 0x09
};
typedef VOS_UINT8 CAS_CNAS_1X_TERMINATE_REASON_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_MSG_TYPE_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_1X_MSG_TYPE_ENUM
{
    CAS_CNAS_1X_MSG_TYPE_RX_TC          = 0x00,
    CAS_CNAS_1X_MSG_TYPE_TX_TC          = 0x01,
    CAS_CNAS_1X_MSG_TYPE_RX_COMMON      = 0x02,
    CAS_CNAS_1X_MSG_TYPE_TX_COMMON      = 0x03,
    CAS_CNAS_1X_MSG_TYPE_BUTT           = 0x04
};
typedef VOS_UINT8 CAS_CNAS_1X_MSG_TYPE_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_REL_REASON_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_1X_REL_REASON_ENUM
{
    CAS_CNAS_1X_REL_REASON_NORMAL_RELEASE                   = 0x00,
    CAS_CNAS_1X_REL_REASON_POWER_DOWN_RELEASE               = 0x01,
    CAS_CNAS_1X_REL_REASON_SERVICE_INACTIVE                 = 0x02,
    CAS_CNAS_1X_REL_REASON_SUB_STATE_TIMER_EXPIRED          = 0x03,
    CAS_CNAS_1X_REL_REASON_FNM_RELEASE                      = 0x04,
    CAS_CNAS_1X_REL_REASON_BUTT                             = 0x05
};
typedef VOS_UINT8 CAS_CNAS_1X_REL_REASON_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_RX_TCH_MSG_TYPE_ENUM_UINT8
 *
 * Description : C.S0004-D Table 3.2.2.2.1.2-1.  MSG_TYPE Values for Regular
 * PDUs on f-dsch
 *******************************************************************************/
enum CAS_CNAS_1X_RX_TCH_MSG_TYPE_ENUM
{
    CAS_CNAS_1X_RX_TCH_ORDER_MSG                            = 0x01,
    CAS_CNAS_1X_RX_TCH_ALERT_WITH_INFORMATION_MSG           = 0x03,
    CAS_CNAS_1X_RX_TCH_DATA_BURST_MSG                       = 0x04,
    CAS_CNAS_1X_RX_TCH_SEND_BURST_DTMF_MSG                  = 0x09,
    CAS_CNAS_1X_RX_TCH_FLASH_WITH_INFORMATION_MSG           = 0x0E,
    CAS_CNAS_1X_RX_TCH_REGISTRATION_MSG                     = 0x0F,
    CAS_CNAS_1X_RX_TCH_SERVICE_OPTION_CONTROL_MSG           = 0x15,
    CAS_CNAS_1X_RX_TCH_EXT_ALERT_WITH_INFORMATION_MSG       = 0x28,
    CAS_CNAS_1X_RX_TCH_EXT_FLASH_WITH_INFORMATION_MSG       = 0x2A,
    CAS_CNAS_1X_RX_TCH_MSG_TYPE_BUTT                        = 0x2B
};
typedef VOS_UINT8 CAS_CNAS_1X_RX_TCH_MSG_TYPE_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_TX_TCH_MSG_TYPE_ENUM_UINT8
 *
 * Description : C.S0004-D Table 2.2.1.2.1.2-1.  MSG_TYPE Values for Regular
 * PDUs on r-dsch
 *******************************************************************************/
enum CAS_CNAS_1X_TX_TCH_MSG_TYPE_ENUM
{
    CAS_CNAS_1X_TX_TCH_ORDER_MSG                            = 0x01,
    CAS_CNAS_1X_TX_TCH_FLASH_WITH_INFORMATION_MSG           = 0x03,
    CAS_CNAS_1X_TX_TCH_DATA_BURST_MSG                       = 0x04,
    CAS_CNAS_1X_TX_TCH_SEND_BURST_DTMF_MSG                  = 0x07,
    CAS_CNAS_1X_TX_TCH_SERVICE_OPTION_CONTROL_MSG           = 0x0F,
    CAS_CNAS_1X_TX_TCH_EXT_FLASH_WITH_INFORMATION_MSG       = 0x1B,
    CAS_CNAS_1X_TX_TCH_CALL_CANCEL_MSG                      = 0x23,
    CAS_CNAS_1X_TX_TCH_MSG_TYPE_BUTT                        = 0x24
};
typedef VOS_UINT8 CAS_CNAS_1X_TX_TCH_MSG_TYPE_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_RX_COMMON_MSG_TYPE_ENUM_UINT8
 *
 * Description : C.S0004-D Table 3.1.2.3.1.1.2-1.  MSG_ID Values on f-csch
 *******************************************************************************/
enum CAS_CNAS_1X_RX_COMMON_MSG_TYPE_ENUM
{
    CAS_CNAS_1X_RX_COMMON_ORDER_MSG                         = 0x07,
    CAS_CNAS_1X_RX_COMMON_DATA_BURST_MSG                    = 0x09,
    CAS_CNAS_1X_RX_COMMON_FEATURE_NOTIFICATION_MSG          = 0x0C,
    CAS_CNAS_1X_RX_COMMON_PACA_MSG                          = 0x14,
    CAS_CNAS_1X_RX_COMMON_MSG_TYPE_BUTT                     = 0x15
};
typedef VOS_UINT8 CAS_CNAS_1X_RX_COMMON_MSG_TYPE_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_TX_COMMON_MSG_TYPE_ENUM_UINT8
 *
 * Description : C.S0004-D Table 2.1.1.4.1.1.2-1.  MSG_ID values on r-csch
 *******************************************************************************/
enum CAS_CNAS_1X_TX_COMMON_MSG_TYPE_ENUM
{
    CAS_CNAS_1X_TX_COMMON_ORDER_MSG                         = 0x02,
    CAS_CNAS_1X_TX_COMMON_DATA_BURST_MSG                    = 0x03,
    CAS_CNAS_1X_TX_COMMON_BUTT                              = 0x04
};
typedef VOS_UINT8 CAS_CNAS_1X_TX_COMMON_MSG_TYPE_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_DATA_CNF_RSLT_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_1X_DATA_CNF_RSLT_ENUM
{
    CAS_CNAS_1X_DATA_CNF_RSLT_SUCCESS                       = 0x00,
    CAS_CNAS_1X_DATA_CNF_RSLT_FAILURE                       = 0x01,
    CAS_CNAS_1X_DATA_CNF_RSLT_DBM_TOO_LARGE                 = 0x02,
    CAS_CNAS_1X_DATA_CNF_RSLT_STATUS_ERROR                  = 0x03,
    CAS_CNAS_1X_DATA_CNF_RSLT_INTERRUPT_BY_MT_CALL          = 0x04,
    CAS_CNAS_1X_DATA_CNF_RSLT_NO_RF                         = 0x05,
    CAS_CNAS_1X_DATA_CNF_RSLT_BUTT                          = 0x06
};
typedef VOS_UINT8 CAS_CNAS_1X_DATA_CNF_RSLT_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_CAS_ABNORMAL_INFO_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_1X_CAS_ABNORMAL_INFO_ENUM
{
    CAS_CNAS_1X_CAS_DECRYPT_MSG_FAIL                        = 0x00,
    CAS_CNAS_1X_CAS_FULL_TMSI_TIMER_EXPIRATION              = 0x01,
    CAS_CNAS_1X_CAS_ABNORMAL_INFO_BUTT                      = 0x02
};
typedef VOS_UINT8 CAS_CNAS_1X_CAS_ABNORMAL_INFO_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_CAS_STATE_ENUM_UINT8
 *
 * Description : When MS is in the different state, MS should perform 
 * different actions.
 * Refers to  C.S0017 2.6.5.5
 *******************************************************************************/
enum CAS_CNAS_1X_CAS_STATE_ENUM
{
    CAS_CNAS_1X_CAS_INIT_STATE          = 0x00,
    CAS_CNAS_1X_CAS_IDLE_STATE          = 0x01,
    CAS_CNAS_1X_CAS_ACCESS_STATE        = 0x02,
    CAS_CNAS_1X_CAS_TCH_STATE           = 0x03,
    CAS_CNAS_1X_CAS_NO_SERVICE_STATE    = 0x04,
    CAS_CNAS_1X_CAS_STATE_ENUM_BUTT     = 0x05
};
typedef VOS_UINT8 CAS_CNAS_1X_CAS_STATE_ENUM_UINT8;

/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/

/*******************************************************************************
 6. STRUCT and UNION declaration
*******************************************************************************/

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_MSG_TYPE_INFO_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    CAS_CNAS_1X_MSG_TYPE_ENUM_UINT8                         enChannelMsg;
    CAS_CNAS_1X_TX_TCH_MSG_TYPE_ENUM_UINT8                  enTxTcMsgType;
    CAS_CNAS_1X_RX_TCH_MSG_TYPE_ENUM_UINT8                  enRxTcMsgType;
    CAS_CNAS_1X_RX_COMMON_MSG_TYPE_ENUM_UINT8               enRxIdleMsgType;
    CAS_CNAS_1X_TX_COMMON_MSG_TYPE_ENUM_UINT8               enTxIdleMsgType;
    VOS_UINT8                                               aucReserved[3];
} CAS_CNAS_1X_MSG_TYPE_INFO_STRU;

/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_CAS_STATE_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CAS_CNAS_1X_CAS_STATE_ENUM_UINT8                        enCasState;
    CAS_CNAS_1X_CAS_SUB_STATE_ENUM_UINT8                    enCasSubState;
    VOS_UINT8                                               aucReserve[2];
} CAS_CNAS_1X_CAS_STATE_IND_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_ENCRYPT_FAIL_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CAS_CNAS_1X_ENCRYPT_FAIL_IND_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_TMSI_TIMER_EXPIRED_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CAS_CNAS_1X_TMSI_TIMER_EXPIRED_IND_STRU;

/** ****************************************************************************
 * Name        : CNAS_CAS_1X_POWER_OFF_REQ_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CNAS_CAS_1X_POWER_OFF_REQ_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_POWER_OFF_CNF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CAS_CNAS_1X_POWER_OFF_CNF_STRU;

/** ****************************************************************************
 * Name        : CNAS_CAS_1X_DSCH_DATA_REQ_STRU
 *
 * Description : Request from Layer_3_NAS to send NAS related air message to
 * base station.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    VOS_UINT8                                               ucMsgSeqNum;
    CAS_CNAS_1X_TX_TCH_MSG_TYPE_ENUM_UINT8                  enTxDschMsgType;
    PS_BOOL_ENUM_UINT8                                      enIsAmDataReq;
    VOS_UINT8                                               aucReserved1[1];
    VOS_UINT16                                              usMsgDataLen;
    VOS_UINT8                                               aucReserved2[2];
    VOS_UINT8                                               aucMsgData[4];
} CNAS_CAS_1X_DSCH_DATA_REQ_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_DSCH_DATA_CNF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CAS_CNAS_1X_DATA_CNF_RSLT_ENUM_UINT8                    enRslt;
    VOS_UINT8                                               ucMsgSeqNum;
    VOS_UINT8                                               aucReserved[2];
} CAS_CNAS_1X_DSCH_DATA_CNF_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_DSCH_DATA_IND_STRU
 *
 * Description : Delivery of forward link SDU to Layer_3_NAS.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CAS_CNAS_1X_RX_TCH_MSG_TYPE_ENUM_UINT8                  enDschMsgType;
    VOS_UINT8                                               aucReserved[1];
    VOS_UINT16                                              usMsgDataLen;
    VOS_UINT8                                               aucMsgData[4];
} CAS_CNAS_1X_DSCH_DATA_IND_STRU;

/** ****************************************************************************
 * Name        : CNAS_CAS_1X_CSCH_DATA_REQ_STRU
 *
 * Description : Request from Layer_3_NAS to send NAS related air message to
 * base station.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CAS_CNAS_1X_TX_COMMON_MSG_TYPE_ENUM_UINT8               enTxCschMsgType;
    VOS_UINT8                                               aucAuthDigit[CNAS_CAS_1X_MAX_AUTH_DIGIT_NUM];
    PS_BOOL_ENUM_UINT8                                      enAckReqFlag;
    VOS_UINT8                                               aucAckPara[2];
    VOS_UINT8                                               ucMsgSeqNum;
    CAS_CNAS_1X_DATA_BURST_TYPE_ENUM_UINT8                  enDataBurstType;
    CAS_CNAS_1X_MSG_DATA_TYPE_ENUM_UINT8                    enMsgDataType;
    VOS_UINT16                                              usMsgDataLen;
    VOS_UINT8                                               aucMsgData[4];
} CNAS_CAS_1X_CSCH_DATA_REQ_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_CALL_REL_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    VOS_UINT8                                               ucConnectId;
    VOS_UINT8                                               ucConRef;
    VOS_UINT8                                               aucReserved[2];
} CAS_CNAS_1X_CALL_REL_IND_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_CSCH_DATA_CNF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CAS_CNAS_1X_DATA_CNF_RSLT_ENUM_UINT8                    enRslt;
    VOS_UINT8                                               ucMsgSeqNum;
    VOS_UINT8                                               aucReseve[2];
} CAS_CNAS_1X_CSCH_DATA_CNF_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_CSCH_DATA_IND_STRU
 *
 * Description : Delivery of forward link SDU to Layer_3_NAS.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CAS_CNAS_1X_RX_COMMON_MSG_TYPE_ENUM_UINT8               enCschMsgType;
    PS_BOOL_ENUM_UINT8                                      enAckReqFlag;
    VOS_UINT8                                               aucAckPara[2];
    VOS_UINT16                                              usMsgDataLen;
    VOS_UINT8                                               aucReserv[2];
    VOS_UINT8                                               aucMsgData[4];
} CAS_CNAS_1X_CSCH_DATA_IND_STRU;

/** ****************************************************************************
 * Name        : CNAS_CAS_1X_CALL_REL_REQ_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    VOS_UINT8                                               ucIsRelAll;
    VOS_UINT8                                               ucConnectId;
    VOS_UINT8                                               ucConRef;
    CAS_CNAS_1X_REL_REASON_ENUM_UINT8                       enRelReason;
} CNAS_CAS_1X_CALL_REL_REQ_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_CALL_TERMINATE_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    PS_BOOL_ENUM_UINT8                                      enTerminateAll;
    VOS_UINT8                                               ucConnectId;
    VOS_UINT8                                               ucConRef;
    CAS_CNAS_1X_TERMINATE_REASON_ENUM_UINT8                 enTerminateReason;
} CAS_CNAS_1X_CALL_TERMINATE_IND_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_PAGING_IND_STRU
 *
 * Description : When L3AS receive a PAGE message including a SO,L3AS send
 * this SO info to NAS.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CAS_CNAS_1X_SERVICE_OPTION_ENUM_UINT16                  enSo;
    VOS_UINT8                                               aucReserve[2];
} CAS_CNAS_1X_PAGING_IND_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_PARA_NOT_CURRENT_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CAS_CNAS_1X_PARA_NOT_CURRENT_IND_STRU;

/** ****************************************************************************
 * Name        : CNAS_CAS_1X_LONG_CODE_TRANSITION_NTF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    PS_BOOL_ENUM_UINT8                                      enUsePrivateLongCodeFlag;
    VOS_UINT8                                               aucReserve[3];
} CNAS_CAS_1X_LONG_CODE_TRANSITION_NTF_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_POWEROFF_REL_ORDER_SND_NTF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CAS_CNAS_1X_POWEROFF_REL_ORDER_SND_NTF_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_SMS_ABORT_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CAS_CNAS_1X_SMS_ABORT_IND_STRU;

/** ****************************************************************************
 * Name        : CNAS_CAS_1X_SET_SIGNAL_QUALITY_REQ_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    VOS_UINT8                                               ucRptThreshold; /**< when delta rssi above this threshold ,report  ind to nas */
    VOS_UINT8                                               ucTimeInterval;
    VOS_UINT8                                               aucReserve[2];
} CNAS_CAS_1X_SET_SIGNAL_QUALITY_REQ_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_SET_SIGNAL_QUALITY_CNF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CAS_CNAS_1X_SIGNAL_QUALITY_CNF_RSLT_ENUM_UINT8          enRslt;
    VOS_UINT8                                               aucReserve[3];
} CAS_CNAS_1X_SET_SIGNAL_QUALITY_CNF_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_SIGNAL_QUALITY_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    VOS_INT8                                                cCdmaRssi;     /**< [-110,0],invalid value =0x7f */
    VOS_INT8                                                cCdmaEcIo;     /**< [-25,-1],invalid value = 0x7f */
    VOS_UINT8                                               aucReserve[2];
} CAS_CNAS_1X_SIGNAL_QUALITY_IND_STRU;

/** ****************************************************************************
 * Name        : CNAS_CAS_1X_FREQ_LOCK_NTF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CAS_CNAS_1X_FREQ_LOCK_MODE_ENUM_UINT16                  enMode;
    VOS_UINT16                                              usBandClass;
    VOS_UINT16                                              usFreq;
    VOS_UINT16                                              usPilotPn;
} CNAS_CAS_1X_FREQ_LOCK_NTF_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_MAINTENANCE_REASON_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    VOS_UINT32                                              ulReason;
} CAS_CNAS_1X_MAINTENANCE_REASON_IND_STRU;

/** ****************************************************************************
 * Name        : CNAS_CAS_1X_OOC_NTF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CNAS_CAS_1X_OOC_NTF_STRU;

/** ****************************************************************************
 * Name        : CNAS_CAS_1X_SESSION_BEGIN_NTF_STRU
 *
 * Description : SendPid: XSD,XCC,XREG,XSMS, ReceivePid: CASM
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CNAS_CAS_1X_SESSION_TYPE_ENUM_UINT16                    enSessionType;
    VOS_UINT8                                               aucReserve[2];
} CNAS_CAS_1X_SESSION_BEGIN_NTF_STRU;

/** ****************************************************************************
 * Name        : CNAS_CAS_1X_SESSION_END_NTF_STRU
 *
 * Description : SendPid: XSD,XCC,XREG,XSMS, ReceivePid: CASM
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CNAS_CAS_1X_SESSION_TYPE_ENUM_UINT16                    enSessionType;
    VOS_UINT8                                               aucReserve[2];
} CNAS_CAS_1X_SESSION_END_NTF_STRU;

/** ****************************************************************************
 * Name        : CNAS_CAS_1X_SUSPEND_REQ_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CNAS_CAS_1X_SUSPEND_REQ_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_SUSPEND_CNF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CAS_CNAS_1X_SUSPEND_CNF_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_1X_P_VER_IND_STRU
 *
 * Description : senderPid:1XCAM , recvivePid : XREG
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_1X_CONTROL_MAIN_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CAS_CNAS_1X_CAS_P_REV_ENUM_UINT8                        enProtocolRev;
    VOS_UINT8                                               aucReserve[3];
} CAS_CNAS_1X_P_VER_IND_STRU;

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*******************************************************************************
 9. Function declarations
*******************************************************************************/

#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */

#endif
