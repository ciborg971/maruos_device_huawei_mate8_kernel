/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2015

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2015-08-13
 * @file
 * @brief
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef NAS_CTTF_HRPD_RSNP_PIF_H
#define NAS_CTTF_HRPD_RSNP_PIF_H

/*******************************************************************************
 1. Other files included
*******************************************************************************/

#include "vos.h"
#include "cttf_hrpd_sig_public_pif.h"

#ifdef __cplusplus
#if __cplusplus
    extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/


/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : NAS_CTTF_HRPD_RSNP_PIF_MSG_TYPE_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum NAS_CTTF_HRPD_RSNP_PIF_MSG_TYPE_ENUM
{
    ID_CTTF_CNAS_HRPD_SNP_DATA_CNF                          = 0x3500, /**< @sa CTTF_CNAS_HRPD_SNP_DATA_CNF_STRU */
    ID_CNAS_CTTF_HRPD_SNP_DATA_REQ                          = 0x3501, /**< @sa CNAS_CTTF_HRPD_SNP_DATA_REQ_STRU */
    ID_CTTF_CNAS_HRPD_SNP_DATA_IND                          = 0x3502, /**< @sa CTTF_CNAS_HRPD_SNP_DATA_IND_STRU */
    ID_NAS_CTTF_HRPD_RSNP_PIF_MSG_TYPE_ENUM_BUTT            = 0x3503
};
typedef VOS_UINT16 NAS_CTTF_HRPD_RSNP_PIF_MSG_TYPE_ENUM_UINT16;

/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/

/*******************************************************************************
 6. STRUCT and UNION declaration
*******************************************************************************/

/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CTTF_CNAS_HRPD_SNP_DATA_CNF_STRU
 *
 * Description : This signal confirms result of CNAS_CTTF_HRPD_SNP_DATA_REQ.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    NAS_CTTF_HRPD_RSNP_PIF_MSG_TYPE_ENUM_UINT16             enMsgId;
    VOS_UINT16                                              usOpId;
    CTTF_HRPD_SNP_RSLT_ENUM_UINT32                          enRslt;
} CTTF_CNAS_HRPD_SNP_DATA_CNF_STRU;

/** ****************************************************************************
 * Name        : CNAS_CTTF_HRPD_SNP_DATA_REQ_STRU
 *
 * Description : The signal is used to deliver the signal message which
 * received from protocols in HRPD_Layer_3_AS layer. Protocols in
 * HRPD_Layer_3_AS layer use CTTF_HRPD_SNP to exchange messages.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    NAS_CTTF_HRPD_RSNP_PIF_MSG_TYPE_ENUM_UINT16             enMsgId;
    VOS_UINT16                                              usOpId;
    CTTF_HRPD_PROTOCOL_TYPE_ENUM_UINT16                     enProtocolType; /**< protocol type */
    CTTF_HRPD_INSTANCE_TYPE_ENUM_UINT8                      enInstanceType; /**< InConfiguration or InUse instance */
    CTTF_HRPD_ADDRESS_TYPE_ENUM_UINT8                       enAddressType;  /**< addressing modes: broadcast, multicast, unicast */
    CTTF_HRPD_CHANNEL_TYPE_ENUM_UINT8                       enChannelType;  /**< channel type */
    CTTF_HRPD_DELLIVERY_TYPE_ENUM_UINT8                     enDeliveryType; /**< SLP delivery type */
    VOS_UINT8                                               ucPriority;     /**< a number between 0 and 255 */
    CTTF_HRPD_BEST_EFFORT_NEED_RSLT_ENUM_UINT8              enNeedRslt;
    SNPITF_MSG_DATA_STRU                                    stMsgData;      /**< message data struct */
} CNAS_CTTF_HRPD_SNP_DATA_REQ_STRU;

/** ****************************************************************************
 * Name        : CTTF_CNAS_HRPD_SNP_DATA_IND_STRU
 *
 * Description : The signal is used to deliver the signal message received from
 * AN to HRPD_Layer3_NAS. CTTF_HRPD_SNP will parse the SNP header, and send the
 * message data to the addressee.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    NAS_CTTF_HRPD_RSNP_PIF_MSG_TYPE_ENUM_UINT16             enMsgId;
    VOS_UINT16                                              usOpId;
    CTTF_HRPD_PROTOCOL_TYPE_ENUM_UINT16                     enProtocolType; /**< protocol type */
    CTTF_HRPD_INSTANCE_TYPE_ENUM_UINT8                      enInstanceType; /**< InConfiguration or InUse instance */
    VOS_UINT8                                               aucReserve[1];
    SNPITF_MSG_DATA_STRU                                    stMsgData;      /**< message data struct */
} CTTF_CNAS_HRPD_SNP_DATA_IND_STRU;

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*******************************************************************************
 9. Function declarations
*******************************************************************************/

#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */

#endif
