/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2015

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2015-08-12
 * @file
 * @brief
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef CTTF_HRPD_RMAC_DATA_STATUS_PIF_H
#define CTTF_HRPD_RMAC_DATA_STATUS_PIF_H

/*******************************************************************************
 1. Other files included
*******************************************************************************/

#include "vos.h"

#ifdef __cplusplus
#if __cplusplus
    extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/


/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CTTF_HRPD_RMAC_DATA_STATUS_PIF_MSG_TYPE_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum CTTF_HRPD_RMAC_DATA_STATUS_PIF_MSG_TYPE_ENUM
{
    ID_CTTF_CNAS_HRPD_ACMAC_TXENDED_IND                     = 0x33A0, /**< @sa CTTF_CNAS_HRPD_ACMAC_TXENDED_IND_STRU */
    ID_CTTF_CAS_HRPD_ACMAC_TXSTARTED_IND                    = 0x33A1, /**< @sa CTTF_CAS_HRPD_ACMAC_TXSTARTED_IND_STRU */
    ID_CTTF_CAS_HRPD_ACMAC_TXENDED_IND                      = 0x33A2, /**< @sa CTTF_CAS_HRPD_ACMAC_TXENDED_IND_STRU */
    ID_CTTF_CAS_HRPD_ACMAC_TRANSMISSION_SUCC_IND            = 0x33A3, /**< @sa CTTF_CAS_HRPD_ACMAC_TRANSMISSION_SUCC_IND_STRU */
    ID_CTTF_CAS_HRPD_ACMAC_TRANSMISSION_FAIL_IND            = 0x33A4, /**< @sa CTTF_CAS_HRPD_ACMAC_TRANSMISSION_FAIL_IND_STRU */
    ID_CTTF_CAS_HRPD_ACMAC_SUPERVISION_FAILED_IND           = 0x33A5, /**< @sa CTTF_CAS_HRPD_ACMAC_SUPERVISION_FAILED_IND_STRU */
    ID_CTTF_CAS_HRPD_RTCMAC_LINK_ACQUIRED_IND               = 0x33A6, /**< @sa CTTF_CAS_HRPD_RTCMAC_LINK_ACQUIRED_IND_STRU */
    ID_CTTF_CAS_HRPD_RTCMAC_SUPERVISION_FAILED_IND          = 0x33A7, /**< @sa CTTF_CAS_HRPD_RTCMAC_SUPERVISION_FAILED_IND_STRU */
    ID_CTTF_HRPD_RMAC_DATA_STATUS_PIF_MSG_TYPE_ENUM_BUTT    = 0x33A8
};
typedef VOS_UINT16 CTTF_HRPD_RMAC_DATA_STATUS_PIF_MSG_TYPE_ENUM_UINT16;

/** ****************************************************************************
 * Name        : CTTF_HRPD_ACMAC_TRANS_FAIL_REASON_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CTTF_HRPD_ACMAC_TRANS_FAIL_REASON_ENUM
{
    CTTF_HRPD_ACMAC_TRANS_FAIL_REASON_MAX_PROBE             = 0x00,
    CTTF_HRPD_ACMAC_TRANS_FAIL_REASON_PERSIST_FAIL          = 0x01,
    CTTF_HRPD_ACMAC_TRANS_FAIL_REASON_OTHER                 = 0x02,
    CTTF_HRPD_ACMAC_TRANS_FAIL_REASON_ENUM_BUTT             = 0x03
};
typedef VOS_UINT8 CTTF_HRPD_ACMAC_TRANS_FAIL_REASON_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CTTF_HRPD_ACMAC_TXEND_RESULT_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CTTF_HRPD_ACMAC_TXEND_RESULT_ENUM
{
    CTTF_HRPD_ACMAC_TXEND_RSLT_SUCCESS  = 0x00,
    CTTF_HRPD_ACMAC_TXEND_RSLT_ABORTED  = 0x01,
    CTTF_HRPD_ACMAC_TXEND_RSLT_FAILURE  = 0x02,
    CTTF_HRPD_ACMAC_TXEND_RSLT_BUTT     = 0x03
};
typedef VOS_UINT8 CTTF_HRPD_ACMAC_TXEND_RESULT_ENUM_UINT8;

/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/

/*******************************************************************************
 6. STRUCT and UNION declaration
*******************************************************************************/

/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CTTF_CNAS_HRPD_ACMAC_TXENDED_IND_STRU
 *
 * Description : This signal is sent from ACMAC to CNAS when AC transmission is
 * ended. Applies to both when transmission is ended because of transmission
 * success and failure.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CTTF_HRPD_RMAC_DATA_STATUS_PIF_MSG_TYPE_ENUM_UINT16     enMsgId;
    VOS_UINT16                                              usOpId;
    CTTF_HRPD_ACMAC_TXEND_RESULT_ENUM_UINT8                 enRslt;
    VOS_UINT8                                               aucReserve[3];
} CTTF_CNAS_HRPD_ACMAC_TXENDED_IND_STRU;

/** ****************************************************************************
 * Name        : CTTF_CAS_HRPD_ACMAC_TXSTARTED_IND_STRU
 *
 * Description : This signal is sent from ACMAC to CAS before AC transmission
 * is started.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CTTF_HRPD_RMAC_DATA_STATUS_PIF_MSG_TYPE_ENUM_UINT16     enMsgId;
    VOS_UINT16                                              usOpId;
} CTTF_CAS_HRPD_ACMAC_TXSTARTED_IND_STRU;

/** ****************************************************************************
 * Name        : CTTF_CAS_HRPD_ACMAC_TXENDED_IND_STRU
 *
 * Description : This signal is sent from ACMAC to CAS when AC transmission is
 * ended. Applies to both when transmission is ended because of transmission
 * success and failure.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CTTF_HRPD_RMAC_DATA_STATUS_PIF_MSG_TYPE_ENUM_UINT16     enMsgId;
    VOS_UINT16                                              usOpId;
} CTTF_CAS_HRPD_ACMAC_TXENDED_IND_STRU;

/** ****************************************************************************
 * Name        : CTTF_CAS_HRPD_ACMAC_TRANSMISSION_SUCC_IND_STRU
 *
 * Description : This signal is sent from ACMAC to CAS in case of successful AC
 * transmission.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CTTF_HRPD_RMAC_DATA_STATUS_PIF_MSG_TYPE_ENUM_UINT16     enMsgId;
    VOS_UINT16                                              usOpId;
} CTTF_CAS_HRPD_ACMAC_TRANSMISSION_SUCC_IND_STRU;

/** ****************************************************************************
 * Name        : CTTF_CAS_HRPD_ACMAC_TRANSMISSION_FAIL_IND_STRU
 *
 * Description : This signal is sent from ACMAC to CAS upon Access channel
 * failure. AC is aborted.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CTTF_HRPD_RMAC_DATA_STATUS_PIF_MSG_TYPE_ENUM_UINT16     enMsgId;
    VOS_UINT16                                              usOpId;
    CTTF_HRPD_ACMAC_TRANS_FAIL_REASON_ENUM_UINT8            enTransFailReason;
    VOS_UINT8                                               aucReserv[3];
} CTTF_CAS_HRPD_ACMAC_TRANSMISSION_FAIL_IND_STRU;

/** ****************************************************************************
 * Name        : CTTF_CAS_HRPD_ACMAC_SUPERVISION_FAILED_IND_STRU
 *
 * Description : This signal is sent upon AC Supervision failure. Supervision
 * failure occurs when access parameters are not current and no new parameters
 * are received within access parameter supervision timer timeout period.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CTTF_HRPD_RMAC_DATA_STATUS_PIF_MSG_TYPE_ENUM_UINT16     enMsgId;
    VOS_UINT16                                              usOpId;
} CTTF_CAS_HRPD_ACMAC_SUPERVISION_FAILED_IND_STRU;

/** ****************************************************************************
 * Name        : CTTF_CAS_HRPD_RTCMAC_LINK_ACQUIRED_IND_STRU
 *
 * Description : Indicates successful reception of RTCAck message from AN.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CTTF_HRPD_RMAC_DATA_STATUS_PIF_MSG_TYPE_ENUM_UINT16     enMsgId;
    VOS_UINT16                                              usOpId;
} CTTF_CAS_HRPD_RTCMAC_LINK_ACQUIRED_IND_STRU;

/** ****************************************************************************
 * Name        : CTTF_CAS_HRPD_RTCMAC_SUPERVISION_FAILED_IND_STRU
 *
 * Description : This signal is sent upon RTCMAC supervision failure.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CTTF_HRPD_RMAC_DATA_STATUS_PIF_MSG_TYPE_ENUM_UINT16     enMsgId;
    VOS_UINT16                                              usOpId;
} CTTF_CAS_HRPD_RTCMAC_SUPERVISION_FAILED_IND_STRU;

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*******************************************************************************
 9. Function declarations
*******************************************************************************/

#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */

#endif
