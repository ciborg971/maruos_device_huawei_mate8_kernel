/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2015

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2015-08-05
 * @file
 * @brief
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef CNAS_CTTF_HRPD_PA_PIF_H
#define CNAS_CTTF_HRPD_PA_PIF_H

/*******************************************************************************
 1. Other files included
*******************************************************************************/

#include "vos.h"
#include "cttf_hrpd_sig_public_pif.h"
#include "PsTypeDef.h"

#ifdef __cplusplus
#if __cplusplus
    extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/


/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CNAS_CTTF_HRPD_PA_PIF_MSG_TYPE_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum CNAS_CTTF_HRPD_PA_PIF_MSG_TYPE_ENUM
{
    ID_CTTF_CNAS_HRPD_PA_COMMITTED_IND                      = 0x3880, /**< @sa CTTF_CNAS_HRPD_PA_COMMITTED_IND_STRU */
    ID_CNAS_CTTF_HRPD_PA_PIF_MSG_TYPE_ENUM_BUTT             = 0x3881
};
typedef VOS_UINT16 CNAS_CTTF_HRPD_PA_PIF_MSG_TYPE_ENUM_UINT16;

/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/

/*******************************************************************************
 6. STRUCT and UNION declaration
*******************************************************************************/

/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CTTF_CNAS_HRPD_PA_COMMITTED_IND_STRU
 *
 * Description : This message is sent to CNAS to forward location update
 * parameter, application type and associated stream number. PA will always
 * send this message when a "normal" commit (initial session negotiation or
 * personality switch) has been received from CAS and parameters have been read
 * from the SCP database. No need to send this message upon "GAUP" commit since
 * RanHandoff parameter is not updated using GAUP.
 *
 * Note RanHandoff is selected from application bound to service network. This
 * is always stream 2 (ensured by session negotiation in SCP),
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CNAS_CTTF_HRPD_PA_PIF_MSG_TYPE_ENUM_UINT16              enMsgId;
    VOS_UINT16                                              usOpId;
    VOS_UINT8                                               ucRanHandoff;
    VOS_UINT8                                               ucStreamNumber;
    CTTF_HRPD_PROTOCOL_TYPE_ENUM_UINT16                     enProtocolType;
} CTTF_CNAS_HRPD_PA_COMMITTED_IND_STRU;

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*******************************************************************************
 9. Function declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CTTF_HRPD_PA_DORMANCY_CB
 *
 * Description : Defines prototype of callback function which is used to
 * monitor RLP traffic flow on both reverse link and forward link. The
 * registered function shall be called every 80ms by PA. It indicates if any
 * packet has been received or transmitted during the last 80ms.
 *
 * If argument is set to PS_TRUE, then there has been either packets received
 * or transmitted during the last 80ms. If argument is set to PS_FALSE, then
 * there has been no activity.
 *******************************************************************************/
typedef VOS_VOID (*CTTF_HRPD_PA_DORMANCY_CB)(PS_BOOL_ENUM_UINT8 enFlowActivity);

/** ****************************************************************************
 * Name        : CTTF_HRPD_RPA_DeregDormancyMonitor
 *
 * Description : Function used to de-register dormancy monitor callback
 * function
 *******************************************************************************/
VOS_VOID CTTF_HRPD_RPA_DeregDormancyMonitor(VOS_VOID);

/** ****************************************************************************
 * Name        : CTTF_HRPD_RPA_RegDormancyMonitor
 *
 * Description :
 *
 * @param[in] pfFunction
 *******************************************************************************/
VOS_VOID CTTF_HRPD_RPA_RegDormancyMonitor(CTTF_HRPD_PA_DORMANCY_CB pfFunction);

#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */

#endif
