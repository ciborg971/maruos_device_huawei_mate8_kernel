/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2015

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2015-06-10
 * @file
 * @brief
 *
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef CAS_HRPD_SESSIONCFG_NAS_PIF_H
#define CAS_HRPD_SESSIONCFG_NAS_PIF_H

/*******************************************************************************
 1. Other files included
*******************************************************************************/

#include "vos.h"
#include "PsTypeDef.h"

#ifdef __cplusplus
#if __cplusplus
    extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/

#define CNAS_CAS_HRPD_SCP_MAX_UATI_LENGTH                   ( 16 )

/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM
{
    ID_CAS_CNAS_HRPD_PA_RAT_MODE_NTF                        = 0x6100, /**< @sa CAS_CNAS_HRPD_PA_RAT_MODE_NTF_STRU */
    ID_CAS_CNAS_HRPD_SESSION_CHANGE_IND                     = 0x6101, /**< @sa CAS_CNAS_HRPD_SESSION_CHANGE_IND_STRU */
    ID_CNAS_CAS_HRPD_SCP_ACTIVE_REQ                         = 0x6102, /**< @sa CNAS_CAS_HRPD_SCP_ACTIVE_REQ_STRU */
    ID_CAS_CNAS_HRPD_SCP_ACTIVE_CNF                         = 0x6103, /**< @sa CAS_CNAS_HRPD_SCP_ACTIVE_CNF_STRU */
    ID_CAS_CNAS_HRPD_SESSION_NEG_START_IND                  = 0x6104, /**< @sa CAS_CNAS_HRPD_SESSION_NEG_START_IND_STRU */
    ID_CAS_CNAS_HRPD_SESSION_NEG_RSLT_IND                   = 0x6105, /**< @sa CAS_CNAS_HRPD_SESSION_NEG_RSLT_IND_STRU */
    ID_CNAS_CAS_HRPD_SCP_DEACTIVE_REQ                       = 0x6106, /**< @sa CNAS_CAS_HRPD_SCP_DEACTIVE_REQ_STRU */
    ID_CAS_CNAS_HRPD_SCP_DEACTIVE_CNF                       = 0x6107, /**< @sa CAS_CNAS_HRPD_SCP_DEACTIVE_CNF_STRU */
    ID_CAS_CNAS_HRPD_HSM_COMMIT_IND                         = 0x6108, /**< @sa CAS_CNAS_HRPD_HSM_COMMIT_IND_STRU */
    ID_CAS_CNAS_HRPD_HLU_COMMIT_IND                         = 0x6109, /**< @sa CAS_CNAS_HRPD_HLU_COMMIT_IND_STRU */
    ID_CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM_BUTT       = 0xFFFF
};
typedef VOS_UINT16 CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM_UINT16;

/** ****************************************************************************
 * Name        : CAS_CNAS_HRPD_PA_MODE_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_HRPD_PA_MODE_ENUM
{
    CAS_CNAS_HRPD_PA_MODE_HRPD          = 0x00,
    CAS_CNAS_HRPD_PA_MODE_EHRPD         = 0x01,
    CAS_CNAS_HRPD_PA_MODE_ENUM_BUTT     = 0x02
};
typedef VOS_UINT8 CAS_CNAS_HRPD_PA_MODE_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_HRPD_SESSION_RELEASE_TYPE_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_HRPD_SESSION_RELEASE_TYPE
{
    CAS_CNAS_HRPD_SESSION_RELEASE_0     = 0x00,
    CAS_CNAS_HRPD_SESSION_RELEASE_A     = 0x01,
    CAS_CNAS_HRPD_SESSION_RELEASE_TYPE_BUTT= 0x02
};
typedef VOS_UINT8 CAS_CNAS_HRPD_SESSION_RELEASE_TYPE_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_HRPD_SCP_CHANGE_REASON_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_HRPD_SCP_CHANGE_REASON_ENUM
{
    CAS_CNAS_HRPD_SCP_CHANGE_REASON_PERSONALITY_CHANGE      = 0x00,
    CAS_CNAS_HRPD_SCP_CHANGE_REASON_BUTT                    = 0x01
};
typedef VOS_UINT8 CAS_CNAS_HRPD_SCP_CHANGE_REASON_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CAS_CNAS_HRPD_SCP_NEG_RSLT_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CAS_CNAS_HRPD_SCP_NEG_RSLT_ENUM
{
    CAS_CNAS_HRPD_SCP_NEG_RSLT_SUCCESS                      = 0x00,
    CAS_CNAS_HRPD_SCP_NEG_RSLT_FAILURE                      = 0x01,
    CAS_CNAS_HRPD_SCP_NEG_RSLT_AN_EXPIRED                   = 0x02,
    CAS_CNAS_HRPD_SCP_NEG_RSLT_CONN_OPEN_FAIL               = 0x03,
    CAS_CNAS_HRPD_SCP_NEG_RSLT_CONN_OPEN_DENY               = 0x04,
    CAS_CNAS_HRPD_SCP_NEG_RSLT_PERSONALITY_INVALID          = 0x05,
    CAS_CNAS_HRPD_SCP_NEG_RSLT_CFG_RSP_EXPIRED              = 0x06,
    CAS_CNAS_HRPD_SCP_NEG_RSLT_CFG_MSG_FAIL                 = 0x07,
    CAS_CNAS_HRPD_SCP_NEG_RSLT_AN_GAUP_FAIL                 = 0x08,
    CAS_CNAS_HRPD_SCP_NEG_RSLT_IRAT_TO_LTE                  = 0x09,
    CAS_CNAS_HRPD_SCP_NEG_RSLT_NO_RF                        = 0x0A,
    CAS_CNAS_HRPD_SCP_NEG_RSLT_BUTT                         = 0x0B
};
typedef VOS_UINT8 CAS_CNAS_HRPD_SCP_NEG_RSLT_ENUM_UINT8;

/** ****************************************************************************
 * Name        : CNAS_CAS_HRPD_SCP_ACT_TYPE_ENUM_UINT8
 *
 * Description :
 *******************************************************************************/
enum CNAS_CAS_HRPD_SCP_ACT_TYPE_ENUM
{
    CNAS_CAS_HRPD_SCP_ACTIVE_TYPE_NEG                       = 0x00,
    CNAS_CAS_HRPD_SCP_ACTIVE_TYPE_RECOVERY                  = 0x01,
    CNAS_CAS_HRPD_SCP_ACTIVE_TYPE_PRIOR_RESTORE             = 0x02,
    CNAS_CAS_HRPD_SCP_ACTIVE_TYPE_BUTT                      = 0x03
};
typedef VOS_UINT8 CNAS_CAS_HRPD_SCP_ACT_TYPE_ENUM_UINT8;

/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/

/*******************************************************************************
 6. STRUCT and UNION declaration
*******************************************************************************/

/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CAS_CNAS_HRPD_PA_RAT_MODE_NTF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CAS_CNAS_HRPD_PA_MODE_ENUM_UINT8                        enPaMode;
    VOS_UINT8                                               aucReserve[3];
} CAS_CNAS_HRPD_PA_RAT_MODE_NTF_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_HRPD_SESSION_CHANGE_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CAS_CNAS_HRPD_SCP_CHANGE_REASON_ENUM_UINT8              enChangeReason;
    CAS_CNAS_HRPD_SESSION_RELEASE_TYPE_UINT8                enSessionReleaseType;
    VOS_UINT8                                               aucReserve[2];
} CAS_CNAS_HRPD_SESSION_CHANGE_IND_STRU;

/** ****************************************************************************
 * Name        : CNAS_CAS_HRPD_SCP_ACTIVE_REQ_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CNAS_CAS_HRPD_SCP_ACT_TYPE_ENUM_UINT8                   enActiveType;
    PS_BOOL_ENUM_UINT8                                      enEhrpdFlag;
    VOS_UINT8                                               aucReserve[2];
    VOS_UINT8                                               aucUATI[CNAS_CAS_HRPD_SCP_MAX_UATI_LENGTH];
} CNAS_CAS_HRPD_SCP_ACTIVE_REQ_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_HRPD_SCP_ACTIVE_CNF_STRU
 *
 * Description : Only
 * HDRHAI_CLOSE_PROT_NEG_FAIL,HDRHAI_CLOSE_CFG_MSG_FAIL
 * HDRHAI_CLOSE_CFG_RSP_EXP, HDRHAI_CLOSE_AN_GAUP_FAIL will carry
 * usProtocolType and ucProtocolSubType ;
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CNAS_CAS_HRPD_SCP_ACT_TYPE_ENUM_UINT8                   enActiveType;
    CAS_CNAS_HRPD_SCP_NEG_RSLT_ENUM_UINT8                   enResult;
    CAS_CNAS_HRPD_SESSION_RELEASE_TYPE_UINT8                enSessionReleaseType;
    PS_BOOL_ENUM_UINT8                                      enProtocolTypeVaildFlag;
    VOS_UINT16                                              usProtocolType;
    VOS_UINT16                                              usProtocolSubType;
} CAS_CNAS_HRPD_SCP_ACTIVE_CNF_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_HRPD_SESSION_NEG_START_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CAS_CNAS_HRPD_SESSION_NEG_START_IND_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_HRPD_SESSION_NEG_RSLT_IND_STRU
 *
 * Description : Only
 * HDRHAI_CLOSE_PROT_NEG_FAIL,HDRHAI_CLOSE_CFG_MSG_FAIL
 * HDRHAI_CLOSE_CFG_RSP_EXP, HDRHAI_CLOSE_AN_GAUP_FAIL will carry
 * usProtocolType and ucProtocolSubType ;
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
    CAS_CNAS_HRPD_SCP_NEG_RSLT_ENUM_UINT8                   enResult;
    CAS_CNAS_HRPD_SESSION_RELEASE_TYPE_UINT8                enSessionReleaseType;
    VOS_UINT8                                               aucReserve[1];
    PS_BOOL_ENUM_UINT8                                      enProtocolTypeVaildFlag;
    VOS_UINT16                                              usProtocolType;
    VOS_UINT16                                              usProtocolSubType;
} CAS_CNAS_HRPD_SESSION_NEG_RSLT_IND_STRU;

/** ****************************************************************************
 * Name        : CNAS_CAS_HRPD_SCP_DEACTIVE_REQ_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CNAS_CAS_HRPD_SCP_DEACTIVE_REQ_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_HRPD_SCP_DEACTIVE_CNF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CAS_CNAS_HRPD_SCP_DEACTIVE_CNF_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_HRPD_HSM_COMMIT_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CAS_CNAS_HRPD_HSM_COMMIT_IND_STRU;

/** ****************************************************************************
 * Name        : CAS_CNAS_HRPD_HLU_COMMIT_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CAS_HRPD_SESSIONCFG_NAS_PIF_MSG_TYPE_ENUM_UINT16        enMsgId;
    VOS_UINT16                                              usOpId;
} CAS_CNAS_HRPD_HLU_COMMIT_IND_STRU;

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*******************************************************************************
 9. Function declarations
*******************************************************************************/

#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */

#endif
