/**************************************************************************
	Generated automatically by Codegenix(TM) - (c) 2000-2004 Dafocus
	EnDec version 1.0.154
	GENERATOR: ed-c-encodeco
	http://www.Dafocus.it/
**************************************************************************/

#ifndef __CSN1DataTypes_cs0063_h
#define __CSN1DataTypes_cs0063_h
#include "csn1clib.h"
#include "ed_lib.h"
#include "ed_c_cs0063.h"
#include "ed_user.h"
#include "endec_configs_cs0063.h"
#if ED_COMMON_CRC != 0x328E3625 && ED_VERSION != 10152 && ED_VERSION != 10153
#error Invalid Encodix library files linked; used those distributed with Encodix 1.0.154
#endif


#ifdef __cplusplus
	extern "C" {
#endif

extern TCSN1CProgram Program_cs0063_Program;


#ifdef CSN1C_LABEL_NAMES
/* List of label names */
extern const char* const Program_cs0063_Labels [];
#endif

/* LABELS */

#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_Route 376
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_Route_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_Route 329
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_Route_SIZE   1
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_data01 380
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_data01_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_data01 333
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_data01_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_Flush_contents_Route 130
#define CSN1_MLMFPA_SRP_INUSE_Flush_contents_Route_SIZE   1
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_Reserved1 377
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_Reserved1_SIZE   2
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_data01_VR 383
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_data01_VR_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_Reserved1 330
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_Reserved1_SIZE   2
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_data01_VR 336
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_data01_VR_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_ReportCount 379
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_ReportCount_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_VR 311
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_VR_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_ReportCount 332
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_ReportCount_SIZE   8
#define CSN1_EMFPKA_RSP_INUSE_RouteSelect_contents_Route  47
#define CSN1_EMFPKA_RSP_INUSE_RouteSelect_contents_Route_SIZE   1
#define CSN1_MLMFPA_RSP_INUSE_RouteSelect_contents_Route 104
#define CSN1_MLMFPA_RSP_INUSE_RouteSelect_contents_Route_SIZE   1
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_LinkFlowNumber 375
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_LinkFlowNumber_SIZE   5
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_SequenceLength 378
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_SequenceLength_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_Route 299
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_Route_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_LinkFlowNumber 328
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_LinkFlowNumber_SIZE   5
#define CSN1_EMFPKA_RSP_INUSE_ActivateRoute_contents_Route  51
#define CSN1_EMFPKA_RSP_INUSE_ActivateRoute_contents_Route_SIZE   1
#define CSN1_MLMFPA_RSP_INUSE_ActivateRoute_contents_Route 108
#define CSN1_MLMFPA_RSP_INUSE_ActivateRoute_contents_Route_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data01 303
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data01_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data02 309
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data02_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_data01_WindowLen 382
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_data01_WindowLen_SIZE   0
#define CSN1_EMFPKA_RSP_INUSE_RouteSelect_contents_Reserved  48
#define CSN1_EMFPKA_RSP_INUSE_RouteSelect_contents_Reserved_SIZE   7
#define CSN1_MLMFPA_RSP_INUSE_RouteSelect_contents_Reserved 105
#define CSN1_MLMFPA_RSP_INUSE_RouteSelect_contents_Reserved_SIZE   7
#define CSN1_MLMFPA_SRP_INUSE_Flush_contents_LinkFlowNumber 129
#define CSN1_MLMFPA_SRP_INUSE_Flush_contents_LinkFlowNumber_SIZE   5
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_data01_WindowLen 335
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_data01_WindowLen_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_ResetRxComplete_contents_Route  67
#define CSN1_EMFPKA_RLP_INUSE_ResetRxComplete_contents_Route_SIZE   1
#define CSN1_EMFPKA_RLP_INUSE_ResetTxComplete_contents_Route  64
#define CSN1_EMFPKA_RLP_INUSE_ResetTxComplete_contents_Route_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_Flush_contents_LastSARSequence 132
#define CSN1_MLMFPA_SRP_INUSE_Flush_contents_LastSARSequence_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_SARSequenceLength 331
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_SARSequenceLength_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ResetRxComplete_contents_Route 124
#define CSN1_MLMFPA_SRP_INUSE_ResetRxComplete_contents_Route_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_ResetTxComplete_contents_Route 121
#define CSN1_MLMFPA_SRP_INUSE_ResetTxComplete_contents_Route_SIZE   1
#define CSN1_EMFPKA_RSP_INUSE_ActivateRoute_contents_Reserved  52
#define CSN1_EMFPKA_RSP_INUSE_ActivateRoute_contents_Reserved_SIZE   7
#define CSN1_MLMFPA_RSP_INUSE_ActivateRoute_contents_Reserved 109
#define CSN1_MLMFPA_RSP_INUSE_ActivateRoute_contents_Reserved_SIZE   7
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_Reserved1 300
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_Reserved1_SIZE   2
#define CSN1_EMFPKA_FCP_INUSE_DataReady_contents_TransactionID  99
#define CSN1_EMFPKA_FCP_INUSE_DataReady_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOn_contents_data01 296
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOn_contents_data01_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_ResetRxIndication_contents_Route  58
#define CSN1_EMFPKA_RLP_INUSE_ResetRxIndication_contents_Route_SIZE   1
#define CSN1_EMFPKA_RLP_INUSE_ResetTxIndication_contents_Route  55
#define CSN1_EMFPKA_RLP_INUSE_ResetTxIndication_contents_Route_SIZE   1
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOn_contents_data01 284
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOn_contents_data01_SIZE   0
#define CSN1_MLMFPA_FCP_INUSE_DataReady_contents_TransactionID  27
#define CSN1_MLMFPA_FCP_INUSE_DataReady_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_Flush_contents_SARSequenceLength 131
#define CSN1_MLMFPA_SRP_INUSE_Flush_contents_SARSequenceLength_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOn_contents_data01 326
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOn_contents_data01_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_ResetRxIndication_contents_Route 115
#define CSN1_MLMFPA_SRP_INUSE_ResetRxIndication_contents_Route_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_ResetTxIndication_contents_Route 112
#define CSN1_MLMFPA_SRP_INUSE_ResetTxIndication_contents_Route_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOn_contents_data01 314
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOn_contents_data01_SIZE   0
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_Reset  76
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_Reset_SIZE   1
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_Route  74
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_Route_SIZE   1
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOff_contents_data01 292
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOff_contents_data01_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_data01 444
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_data01_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_ResetRxComplete_contents_Reserved  68
#define CSN1_EMFPKA_RLP_INUSE_ResetRxComplete_contents_Reserved_SIZE   2
#define CSN1_EMFPKA_RLP_INUSE_ResetTxComplete_contents_Reserved  65
#define CSN1_EMFPKA_RLP_INUSE_ResetTxComplete_contents_Reserved_SIZE   2
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOff_contents_data01 288
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOff_contents_data01_SIZE   0
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_Reset   4
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_Reset_SIZE   1
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_Route   2
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_Route_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOff_contents_data01 322
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOff_contents_data01_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_ReportCount 302
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_ReportCount_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_data01 452
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_data01_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_ResetRxComplete_contents_Reserved 125
#define CSN1_MLMFPA_SRP_INUSE_ResetRxComplete_contents_Reserved_SIZE   2
#define CSN1_MLMFPA_SRP_INUSE_ResetTxComplete_contents_Reserved 122
#define CSN1_MLMFPA_SRP_INUSE_ResetTxComplete_contents_Reserved_SIZE   2
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOff_contents_data01 318
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOff_contents_data01_SIZE   0
#define CSN1_EMFPKA_RSP_INUSE_RouteSelect_contents_TransactionID  46
#define CSN1_EMFPKA_RSP_INUSE_RouteSelect_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_RSP_INUSE_RouteSelect_contents_TransactionID 103
#define CSN1_MLMFPA_RSP_INUSE_RouteSelect_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_OtherQNCount 308
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_OtherQNCount_SIZE   8
#define CSN1_EMFPKA_FCP_INUSE_DataReadyAck_contents_TransactionID 100
#define CSN1_EMFPKA_FCP_INUSE_DataReadyAck_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_ResetRxIndication_contents_Reserved  59
#define CSN1_EMFPKA_RLP_INUSE_ResetRxIndication_contents_Reserved_SIZE   2
#define CSN1_EMFPKA_RLP_INUSE_ResetTxIndicationAck_contents_Route  61
#define CSN1_EMFPKA_RLP_INUSE_ResetTxIndicationAck_contents_Route_SIZE   1
#define CSN1_EMFPKA_RLP_INUSE_ResetTxIndication_contents_Reserved  56
#define CSN1_EMFPKA_RLP_INUSE_ResetTxIndication_contents_Reserved_SIZE   2
#define CSN1_MLMFPA_FCP_INUSE_DataReadyAck_contents_TransactionID  28
#define CSN1_MLMFPA_FCP_INUSE_DataReadyAck_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ResetRxIndication_contents_Reserved 116
#define CSN1_MLMFPA_SRP_INUSE_ResetRxIndication_contents_Reserved_SIZE   2
#define CSN1_MLMFPA_SRP_INUSE_ResetTxIndicationAck_contents_Route 118
#define CSN1_MLMFPA_SRP_INUSE_ResetTxIndicationAck_contents_Route_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_ResetTxIndication_contents_Reserved 113
#define CSN1_MLMFPA_SRP_INUSE_ResetTxIndication_contents_Reserved_SIZE   2
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignalingAck_contents_Route  80
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignalingAck_contents_Route_SIZE   1
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_Reserved  77
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_Reserved_SIZE   2
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_data01 386
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_data01_SIZE   0
#define CSN1_EMFPKA_RSP_INUSE_ActivateRoute_contents_TransactionID  50
#define CSN1_EMFPKA_RSP_INUSE_ActivateRoute_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignalingAck_contents_Route   8
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignalingAck_contents_Route_SIZE   1
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_Reserved   5
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_Reserved_SIZE   2
#define CSN1_MLMFPA_RSP_INUSE_ActivateRoute_contents_TransactionID 107
#define CSN1_MLMFPA_RSP_INUSE_ActivateRoute_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_LinkFlowNumber 298
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_LinkFlowNumber_SIZE   5
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_data01 410
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_data01_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_ReservationOffRequest_contents_data01 393
#define CSN1_EMFPKA_RLP_INUSE_ReservationOffRequest_contents_data01_SIZE   0
#define CSN1_EMFPKA_RSP_INUSE_RouteSelectAck_contents_TransactionID  49
#define CSN1_EMFPKA_RSP_INUSE_RouteSelectAck_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_RSP_INUSE_RouteSelectAck_contents_TransactionID 106
#define CSN1_MLMFPA_RSP_INUSE_RouteSelectAck_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ReservationOffRequest_contents_data01 417
#define CSN1_MLMFPA_SRP_INUSE_ReservationOffRequest_contents_data01_SIZE   0
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents_data01 368
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents_data01_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents_data01 397
#define CSN1_EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents_data01_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_ResetTxIndicationAck_contents_Reserved  62
#define CSN1_EMFPKA_RLP_INUSE_ResetTxIndicationAck_contents_Reserved_SIZE   2
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents_data01 401
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents_data01_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents_data01 421
#define CSN1_MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents_data01_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_ResetTxIndicationAck_contents_Reserved 119
#define CSN1_MLMFPA_SRP_INUSE_ResetTxIndicationAck_contents_Reserved_SIZE   2
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignalingAck_contents_Reserved  82
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignalingAck_contents_Reserved_SIZE   1
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_AckRequired  75
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_AckRequired_SIZE   1
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents_data01 372
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents_data01_SIZE   0
#define CSN1_EMFPKA_LUP_INUSE_LocationComplete_contents_TransactionID  90
#define CSN1_EMFPKA_LUP_INUSE_LocationComplete_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOn_contents_TransactionID 294
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOn_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_data01_FirstErasedDataUnit 381
#define CSN1_EMFPKA_RLP_INUSE_Nak_contents_data01_FirstErasedDataUnit_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_ResetRxComplete_contents_LinkFlowNumber  66
#define CSN1_EMFPKA_RLP_INUSE_ResetRxComplete_contents_LinkFlowNumber_SIZE   5
#define CSN1_EMFPKA_RLP_INUSE_ResetTxComplete_contents_LinkFlowNumber  63
#define CSN1_EMFPKA_RLP_INUSE_ResetTxComplete_contents_LinkFlowNumber_SIZE   5
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOn_contents_TransactionID 282
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOn_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RSP_INUSE_ActivateRouteAck_contents_TransactionID  53
#define CSN1_EMFPKA_RSP_INUSE_ActivateRouteAck_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignalingAck_contents_Reserved  10
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignalingAck_contents_Reserved_SIZE   1
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_AckRequired   3
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_AckRequired_SIZE   1
#define CSN1_MLMFPA_LUP_INUSE_LocationComplete_contents_TransactionID  18
#define CSN1_MLMFPA_LUP_INUSE_LocationComplete_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents_data01 405
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents_data01_SIZE   0
#define CSN1_MLMFPA_RSP_INUSE_ActivateRouteAck_contents_TransactionID 110
#define CSN1_MLMFPA_RSP_INUSE_ActivateRouteAck_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOn_contents_TransactionID 324
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOn_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_SARSequenceLength 301
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_SARSequenceLength_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data01_DelayedNak 304
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data01_DelayedNak_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data02_LargestSAR 310
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data02_LargestSAR_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_data01_FirstErasedDataUnit 334
#define CSN1_MLMFPA_SRP_INUSE_Nak_contents_data01_FirstErasedDataUnit_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_ResetRxComplete_contents_LinkFlowNumber 123
#define CSN1_MLMFPA_SRP_INUSE_ResetRxComplete_contents_LinkFlowNumber_SIZE   5
#define CSN1_MLMFPA_SRP_INUSE_ResetTxComplete_contents_LinkFlowNumber 120
#define CSN1_MLMFPA_SRP_INUSE_ResetTxComplete_contents_LinkFlowNumber_SIZE   5
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOn_contents_TransactionID 312
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOn_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_LUP_INUSE_LocationAssignment_contents_LocationType  87
#define CSN1_EMFPKA_LUP_INUSE_LocationAssignment_contents_LocationType_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationAck_contents_TransactionID  70
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationAck_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOff_contents_TransactionID 290
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOff_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_ReservationAccept_contents_TransactionID  69
#define CSN1_EMFPKA_RLP_INUSE_ReservationAccept_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_TransactionID 442
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_data01_data02 447
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_data01_data02_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOff_contents_TransactionID 286
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOff_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_LUP_INUSE_LocationAssignment_contents_LocationType  15
#define CSN1_MLMFPA_LUP_INUSE_LocationAssignment_contents_LocationType_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationAck_contents_TransactionID 127
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationAck_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOff_contents_TransactionID 320
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOff_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data01_LeadingEdge 306
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data01_LeadingEdge_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_ReservationAccept_contents_TransactionID 126
#define CSN1_MLMFPA_SRP_INUSE_ReservationAccept_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_TransactionID 450
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_data01_data02 455
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_data01_data02_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOff_contents_TransactionID 316
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOff_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_LUP_INUSE_LocationAssignment_contents_LocationValue  89
#define CSN1_EMFPKA_LUP_INUSE_LocationAssignment_contents_LocationValue_SIZE   0
#define CSN1_EMFPKA_LUP_INUSE_LocationAssignment_contents_TransactionID  86
#define CSN1_EMFPKA_LUP_INUSE_LocationAssignment_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_data01_Link 387
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_data01_Link_SIZE   1
#define CSN1_EMFPKA_RLP_INUSE_ResetRxIndication_contents_LinkFlowNumber  57
#define CSN1_EMFPKA_RLP_INUSE_ResetRxIndication_contents_LinkFlowNumber_SIZE   5
#define CSN1_EMFPKA_RLP_INUSE_ResetTxIndication_contents_LinkFlowNumber  54
#define CSN1_EMFPKA_RLP_INUSE_ResetTxIndication_contents_LinkFlowNumber_SIZE   5
#define CSN1_MLMFPA_LUP_INUSE_LocationAssignment_contents_LocationValue  17
#define CSN1_MLMFPA_LUP_INUSE_LocationAssignment_contents_LocationValue_SIZE   0
#define CSN1_MLMFPA_LUP_INUSE_LocationAssignment_contents_TransactionID  14
#define CSN1_MLMFPA_LUP_INUSE_LocationAssignment_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data01_TrailingEdge 307
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data01_TrailingEdge_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_data01_Link 411
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_data01_Link_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_ResetRxIndication_contents_LinkFlowNumber 114
#define CSN1_MLMFPA_SRP_INUSE_ResetRxIndication_contents_LinkFlowNumber_SIZE   5
#define CSN1_MLMFPA_SRP_INUSE_ResetTxIndication_contents_LinkFlowNumber 111
#define CSN1_MLMFPA_SRP_INUSE_ResetTxIndication_contents_LinkFlowNumber_SIZE   5
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignalingAck_contents_AckSequence  81
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignalingAck_contents_AckSequence_SIZE   6
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_LinkFlowNumber  73
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_LinkFlowNumber_SIZE   5
#define CSN1_EMFPKA_LUP_INUSE_LocationAssignment_contents_LocationLength  88
#define CSN1_EMFPKA_LUP_INUSE_LocationAssignment_contents_LocationLength_SIZE   8
#define CSN1_EMFPKA_LUP_INUSE_LocationNotification_contents_LocationType  83
#define CSN1_EMFPKA_LUP_INUSE_LocationNotification_contents_LocationType_SIZE   8
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents_StorageBLOB  97
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents_StorageBLOB_SIZE   0
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBComplete_contents_TransactionID  98
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBComplete_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOn_contents_ReservationCount 295
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOn_contents_ReservationCount_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_ReservationOffRequest_contents_data01_Link 394
#define CSN1_EMFPKA_RLP_INUSE_ReservationOffRequest_contents_data01_Link_SIZE   1
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOn_contents_ReservationCount 283
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOn_contents_ReservationCount_SIZE   8
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignalingAck_contents_AckSequence   9
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignalingAck_contents_AckSequence_SIZE   6
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_LinkFlowNumber   1
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_LinkFlowNumber_SIZE   5
#define CSN1_MLMFPA_LUP_INUSE_LocationAssignment_contents_LocationLength  16
#define CSN1_MLMFPA_LUP_INUSE_LocationAssignment_contents_LocationLength_SIZE   8
#define CSN1_MLMFPA_LUP_INUSE_LocationNotification_contents_LocationType  11
#define CSN1_MLMFPA_LUP_INUSE_LocationNotification_contents_LocationType_SIZE   8
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents_StorageBLOB  25
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents_StorageBLOB_SIZE   0
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBComplete_contents_TransactionID  26
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBComplete_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOn_contents_ReservationCount 325
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOn_contents_ReservationCount_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ReservationOffRequest_contents_data01_Link 418
#define CSN1_MLMFPA_SRP_INUSE_ReservationOffRequest_contents_data01_Link_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOn_contents_ReservationCount 313
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOn_contents_ReservationCount_SIZE   8
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_MessageSequence  78
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_MessageSequence_SIZE   6
#define CSN1_EMFPKA_LUP_INUSE_LocationNotification_contents_LocationValue  85
#define CSN1_EMFPKA_LUP_INUSE_LocationNotification_contents_LocationValue_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOff_contents_ReservationCount 291
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOff_contents_ReservationCount_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_TransactionID 384
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_ReservationCount 443
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_ReservationCount_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOff_contents_ReservationCount 287
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOff_contents_ReservationCount_SIZE   8
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_MessageSequence   6
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_MessageSequence_SIZE   6
#define CSN1_MLMFPA_LUP_INUSE_LocationNotification_contents_LocationValue  13
#define CSN1_MLMFPA_LUP_INUSE_LocationNotification_contents_LocationValue_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOff_contents_ReservationCount 321
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOff_contents_ReservationCount_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_TransactionID 408
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_ReservationCount 451
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_ReservationCount_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOff_contents_ReservationCount 317
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOff_contents_ReservationCount_SIZE   8
#define CSN1_EMFPKA_LUP_INUSE_LocationNotification_contents_LocationLength  84
#define CSN1_EMFPKA_LUP_INUSE_LocationNotification_contents_LocationLength_SIZE   8
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents_TransactionID  94
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBNotification_contents_StorageBLOB  93
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBNotification_contents_StorageBLOB_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_AttributeUpdateAccept_contents_TransactionID  71
#define CSN1_EMFPKA_RLP_INUSE_AttributeUpdateAccept_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_AttributeUpdateReject_contents_TransactionID  72
#define CSN1_EMFPKA_RLP_INUSE_AttributeUpdateReject_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_ReservationOffRequest_contents_TransactionID 391
#define CSN1_EMFPKA_RLP_INUSE_ReservationOffRequest_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_ResetTxIndicationAck_contents_LinkFlowNumber  60
#define CSN1_EMFPKA_RLP_INUSE_ResetTxIndicationAck_contents_LinkFlowNumber_SIZE   5
#define CSN1_MLMFPA_LUP_INUSE_LocationNotification_contents_LocationLength  12
#define CSN1_MLMFPA_LUP_INUSE_LocationNotification_contents_LocationLength_SIZE   8
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents_TransactionID  22
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBNotification_contents_StorageBLOB  21
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBNotification_contents_StorageBLOB_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_AttributeUpdateAccept_contents_TransactionID 128
#define CSN1_MLMFPA_SRP_INUSE_AttributeUpdateAccept_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_AttributeUpdateReject_contents_TransactionID   0
#define CSN1_MLMFPA_SRP_INUSE_AttributeUpdateReject_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ReservationOffRequest_contents_TransactionID 415
#define CSN1_MLMFPA_SRP_INUSE_ReservationOffRequest_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ResetTxIndicationAck_contents_LinkFlowNumber 117
#define CSN1_MLMFPA_SRP_INUSE_ResetTxIndicationAck_contents_LinkFlowNumber_SIZE   5
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_HigherLayerPacket  79
#define CSN1_EMFPKA_DOSP_INUSE_DataOverSignaling_contents_HigherLayerPacket_SIZE   0
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents_TransactionID 367
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents_TransactionID 396
#define CSN1_EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_HigherLayerPacket   7
#define CSN1_MLMFPA_DOSP_INUSE_DataOverSignaling_contents_HigherLayerPacket_SIZE   0
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents_TransactionID 400
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents_TransactionID 420
#define CSN1_MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents_TransactionID 371
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_FCP_INUSE_RestartNetworkInterface_contents_TransactionID 101
#define CSN1_EMFPKA_FCP_INUSE_RestartNetworkInterface_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents_StorageBLOBType  95
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents_StorageBLOBType_SIZE  16
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_ReservationCount 385
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_ReservationCount_SIZE   8
#define CSN1_MLMFPA_FCP_INUSE_RestartNetworkInterface_contents_TransactionID  29
#define CSN1_MLMFPA_FCP_INUSE_RestartNetworkInterface_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents_StorageBLOBType  23
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents_StorageBLOBType_SIZE  16
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents_TransactionID 404
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_ReservationCount 409
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_ReservationCount_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_ReservationOffRequest_contents_ReservationCount 392
#define CSN1_EMFPKA_RLP_INUSE_ReservationOffRequest_contents_ReservationCount_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_data01_AllowableLink 445
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_data01_AllowableLink_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_ReservationOffRequest_contents_ReservationCount 416
#define CSN1_MLMFPA_SRP_INUSE_ReservationOffRequest_contents_ReservationCount_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_data01_AllowableLink 453
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_data01_AllowableLink_SIZE   1
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents_StorageBLOBLength  96
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents_StorageBLOBLength_SIZE   8
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBNotification_contents_StorageBLOBType  91
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBNotification_contents_StorageBLOBType_SIZE  16
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents_StorageBLOBLength  24
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents_StorageBLOBLength_SIZE   8
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBNotification_contents_StorageBLOBType  19
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBNotification_contents_StorageBLOBType_SIZE  16
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data01_LeadingEdgeIncluded 305
#define CSN1_MLMFPA_SRP_INUSE_MultiLinkNak_contents_data01_LeadingEdgeIncluded_SIZE   1
#define CSN1_EMFPKA_FCP_INUSE_RestartNetworkInterfaceAck_contents_TransactionID 102
#define CSN1_EMFPKA_FCP_INUSE_RestartNetworkInterfaceAck_contents_TransactionID_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOn_contents_data01_ReservationLabel 297
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOn_contents_data01_ReservationLabel_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOn_contents_data01_ReservationLabel 285
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOn_contents_data01_ReservationLabel_SIZE   8
#define CSN1_MLMFPA_FCP_INUSE_RestartNetworkInterfaceAck_contents_TransactionID  30
#define CSN1_MLMFPA_FCP_INUSE_RestartNetworkInterfaceAck_contents_TransactionID_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOn_contents_data01_ReservationLabel 327
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOn_contents_data01_ReservationLabel_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOn_contents_data01_ReservationLabel 315
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOn_contents_data01_ReservationLabel_SIZE   8
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBNotification_contents_StorageBLOBLength  92
#define CSN1_EMFPKA_LUP_INUSE_StorageBLOBNotification_contents_StorageBLOBLength_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOff_contents_data01_ReservationLabel 293
#define CSN1_EMFPKA_RLP_INUSE_FwdReservationOff_contents_data01_ReservationLabel_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOff_contents_data01_ReservationLabel 289
#define CSN1_EMFPKA_RLP_INUSE_RevReservationOff_contents_data01_ReservationLabel_SIZE   8
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBNotification_contents_StorageBLOBLength  20
#define CSN1_MLMFPA_LUP_INUSE_StorageBLOBNotification_contents_StorageBLOBLength_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOff_contents_data01_ReservationLabel 323
#define CSN1_MLMFPA_SRP_INUSE_FwdReservationOff_contents_data01_ReservationLabel_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOff_contents_data01_ReservationLabel 319
#define CSN1_MLMFPA_SRP_INUSE_RevReservationOff_contents_data01_ReservationLabel_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_data01_data02_RejectCode 448
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_data01_data02_RejectCode_SIZE   4
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_data01_data02_RejectCode 456
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_data01_data02_RejectCode_SIZE   4
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_data01_ReservationLabel 388
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_data01_ReservationLabel_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_data01_ReservationLabel 412
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_data01_ReservationLabel_SIZE   8
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents_data01_AttributeLength 369
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents_data01_AttributeLength_SIZE   8
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents_data01_AttributeRecord 370
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents_data01_AttributeRecord_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents_data01_AttributeLength 398
#define CSN1_EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents_data01_AttributeLength_SIZE   8
#define CSN1_EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents_data01_AttributeRecord 399
#define CSN1_EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents_data01_AttributeRecord_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_ReservationOffRequest_contents_data01_ReservationLabel 395
#define CSN1_EMFPKA_RLP_INUSE_ReservationOffRequest_contents_data01_ReservationLabel_SIZE   8
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents_data01_AttributeLength 402
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents_data01_AttributeLength_SIZE   8
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents_data01_AttributeRecord 403
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents_data01_AttributeRecord_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents_data01_AttributeLength 422
#define CSN1_MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents_data01_AttributeLength_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents_data01_AttributeRecord 423
#define CSN1_MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents_data01_AttributeRecord_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_ReservationOffRequest_contents_data01_ReservationLabel 419
#define CSN1_MLMFPA_SRP_INUSE_ReservationOffRequest_contents_data01_ReservationLabel_SIZE   8
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents_data01_AttributeLength 373
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents_data01_AttributeLength_SIZE   8
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents_data01_AttributeRecord 374
#define CSN1_EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents_data01_AttributeRecord_SIZE   0
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents_data01_AttributeLength 406
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents_data01_AttributeLength_SIZE   8
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents_data01_AttributeRecord 407
#define CSN1_MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents_data01_AttributeRecord_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_data01_EmergencyIndication 389
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_data01_EmergencyIndication_SIZE   1
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_data01_data02_PendingDuration 449
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_data01_data02_PendingDuration_SIZE   0
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_data01_EmergencyIndication 413
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_data01_EmergencyIndication_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_data01_data02_PendingDuration 457
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_data01_data02_PendingDuration_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01 145
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_data01_ReservationQueuingReq 390
#define CSN1_EMFPKA_RLP_INUSE_ReservationOnRequest_contents_data01_ReservationQueuingReq_SIZE   1
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_data01_ReservationQueuingReq 414
#define CSN1_MLMFPA_SRP_INUSE_ReservationOnRequest_contents_data01_ReservationQueuingReq_SIZE   1
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01 217
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_SIZE   0
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_data01_AllowableReservationLabel 446
#define CSN1_EMFPKA_RLP_INUSE_ReservationReject_contents_data01_AllowableReservationLabel_SIZE   8
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_data01_AllowableReservationLabel 454
#define CSN1_MLMFPA_SRP_INUSE_ReservationReject_contents_data01_AllowableReservationLabel_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01 157
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01 161
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01 151
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01 233
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01 238
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01 223
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01 337
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01 342
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_ValueID 146
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01 141
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01 135
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01 352
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01 357
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_ValueID 218
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_ValueID 139
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_ValueID 133
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_ValueID 158
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_ValueID 162
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_ValueID 152
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01 213
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01 207
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_ValueID 211
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_ValueID 205
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd_data01 229
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_ValueID 234
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_ValueID 239
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_ValueID 224
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_AbortTimer 159
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_AbortTimer_SIZE  16
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_FlushTimer 160
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_FlushTimer_SIZE  16
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_AbortTimer 163
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_AbortTimer_SIZE  16
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_FlushTimer 164
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_FlushTimer_SIZE  16
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01 165
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01 170
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_data02 340
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_data02_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_data02 345
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_data02_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01 175
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01 180
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_ValueID 338
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_ValueID 343
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_AbortTimer 235
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_AbortTimer_SIZE  16
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_FlushTimer 236
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_FlushTimer_SIZE  16
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_AbortTimer 240
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_AbortTimer_SIZE  16
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_FlushTimer 241
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev_data01_FlushTimer_SIZE  16
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01 242
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01 247
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_data02 355
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_data02_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_data02 360
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_data02_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01 252
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01 257
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_ValueID 353
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_ValueID 358
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_QoSProfileCount 140
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_QoSProfileCount_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_QoSProfileCount 134
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_QoSProfileCount_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01 185
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01 190
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxNumLinkFlowsFwd 147
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxNumLinkFlowsFwd_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxNumLinkFlowsRev 148
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxNumLinkFlowsRev_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_NakDelayTimer 237
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd_data01_NakDelayTimer_SIZE  16
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01 195
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01 200
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_QoSProfileCount 212
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_QoSProfileCount_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_QoSProfileCount 206
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_QoSProfileCount_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01 262
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01 267
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd_data01_ValueID 230
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxNumLinkFlowsFwd 219
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxNumLinkFlowsFwd_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxNumLinkFlowsRev 220
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxNumLinkFlowsRev_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_ProfileType 142
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_ProfileType_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_ProfileType 136
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_ProfileType_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ValueID 166
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ValueID 171
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01 272
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01 277
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_ProfileValue 144
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_ProfileValue_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_ProfileValue 138
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_ProfileValue_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01 347
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ValueID 176
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ValueID 181
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_ProfileLength 143
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_ProfileLength_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_ValueID  31
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_ProfileLength 137
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_ProfileLength_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_ProfileType 214
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_ProfileType_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_ProfileType 208
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_ProfileType_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ValueID 243
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ValueID 248
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_ValueID  35
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_ReservationCount 339
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_ReservationCount_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_ReservationCount 344
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_ReservationCount_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxActivatedLinkFlowsFwd 149
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxActivatedLinkFlowsFwd_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxActivatedLinkFlowsRev 150
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxActivatedLinkFlowsRev_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumReservationsFwd 153
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumReservationsFwd_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumReservationsRev 154
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumReservationsRev_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_ProfileValue 216
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_ProfileValue_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_ProfileValue 210
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_ProfileValue_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01 362
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ValueID 253
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ValueID 258
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01 424
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ProfileType 167
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ProfileType_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ProfileType 172
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ProfileType_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_ProfileLength 215
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles_data01_ProfileLength_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_ValueID  39
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_ProfileLength 209
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles_data01_ProfileLength_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ValueID 186
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ValueID 191
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ProfileValue 169
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ProfileValue_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ProfileValue 174
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ProfileValue_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ProfileType 177
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ProfileType_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ProfileType 182
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ProfileType_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_ValueID  42
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_ReservationCount 354
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_ReservationCount_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_ReservationCount 359
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_ReservationCount_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxActivatedLinkFlowsFwd 221
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxActivatedLinkFlowsFwd_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxActivatedLinkFlowsRev 222
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows_data01_MaxActivatedLinkFlowsRev_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumReservationsFwd 225
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumReservationsFwd_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumReservationsRev 226
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumReservationsRev_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ValueID 196
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ValueID 201
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ProfileLength 168
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ProfileLength_SIZE  16
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ProfileLength 173
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ProfileLength_SIZE  16
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ProfileValue 179
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ProfileValue_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ProfileValue 184
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ProfileValue_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01 433
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ProfileType 244
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ProfileType_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ProfileType 249
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ProfileType_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumOpenReservationsFwd 155
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumOpenReservationsFwd_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumOpenReservationsRev 156
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumOpenReservationsRev_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ProfileLength 178
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ProfileLength_SIZE  16
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ProfileLength 183
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ProfileLength_SIZE  16
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ValueID 263
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ValueID 268
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ProfileValue 246
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ProfileValue_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ProfileValue 251
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ProfileValue_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ProfileType 254
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ProfileType_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ProfileType 259
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ProfileType_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ProtocolID 187
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ProtocolID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ProtocolID 192
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ProtocolID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_data02 350
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_data02_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ValueID 273
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ValueID 278
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ProfileLength 245
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd_data01_ProfileLength_SIZE  16
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ProfileLength 250
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev_data01_ProfileLength_SIZE  16
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ProfileValue 256
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ProfileValue_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ProfileValue 261
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ProfileValue_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ProtocolID 197
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ProtocolID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ProtocolID 202
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ProtocolID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_ValueID 348
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd_data01_SARSequenceLength 231
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd_data01_SARSequenceLength_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumOpenReservationsFwd 227
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumOpenReservationsFwd_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumOpenReservationsRev 228
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations_data01_MaxNumOpenReservationsRev_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ProfileLength 255
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd_data01_ProfileLength_SIZE  16
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ProfileLength 260
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev_data01_ProfileLength_SIZE  16
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_data02_ReservationLabel 341
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_data02_ReservationLabel_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_data02_ReservationLabel 346
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_data02_ReservationLabel_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ProtocolID 264
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ProtocolID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ProtocolID 269
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ProtocolID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_data02 365
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_data02_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02 427
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ProtocolID 274
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ProtocolID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ProtocolID 279
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ProtocolID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_ValueID 363
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_ValueID_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_ProtocolSupported  32
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_ProtocolSupported_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_ValueID 425
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_data02_ReservationLabel 356
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd_data01_data02_ReservationLabel_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_data02_ReservationLabel 361
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev_data01_data02_ReservationLabel_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_ProtocolSupported  36
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_ProtocolSupported_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02 436
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_ProtocolSupported  40
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_ProtocolSupported_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd_data01_SARSequenceLengthShort 232
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd_data01_SARSequenceLengthShort_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_ValueID 434
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_ValueID_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_ProtocolSupported  43
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_ProtocolSupported_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ProtocolParameters 189
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ProtocolParameters_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ProtocolParameters 194
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ProtocolParameters_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_BCMCSFlowCount 349
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_BCMCSFlowCount_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ProtocolParameters 199
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ProtocolParameters_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ProtocolParameters 204
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ProtocolParameters_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_ProgramCount 426
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_ProgramCount_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_data03 431
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_data03_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ProtocolParameters 266
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ProtocolParameters_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ProtocolParameters 271
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ProtocolParameters_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_BCMCSFlowCount 364
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_BCMCSFlowCount_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ProtocolParameters 276
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ProtocolParameters_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ProtocolParameters 281
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ProtocolParameters_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_ProgramCount 435
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_ProgramCount_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_data02_BCMCSFlowID 351
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_data02_BCMCSFlowID_SIZE  32
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_data03 440
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_data03_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ProtocolParametersLength 188
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ProtocolParametersLength_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ProtocolParametersLength 193
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ProtocolParametersLength_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_data02_BCMCSFlowID 366
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation_data01_data02_BCMCSFlowID_SIZE  32
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ProtocolParametersLength 198
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ProtocolParametersLength_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ProtocolParametersLength 203
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ProtocolParametersLength_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ProtocolParametersLength 265
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd_data01_ProtocolParametersLength_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ProtocolParametersLength 270
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev_data01_ProtocolParametersLength_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_ProgramIDLSBs 429
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_ProgramIDLSBs_SIZE  32
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ProtocolParametersLength 275
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd_data01_ProtocolParametersLength_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ProtocolParametersLength 280
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev_data01_ProtocolParametersLength_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_ProgramIDLSBs 438
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_ProgramIDLSBs_SIZE  32
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_SupportedProtocolParametersValues  34
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_SupportedProtocolParametersValues_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_SupportedProtocolParametersValues  38
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_SupportedProtocolParametersValues_SIZE   0
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_ProgramIDLSBLength 428
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_ProgramIDLSBLength_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_SupportedProtocolParametersValues  45
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_SupportedProtocolParametersValues_SIZE   0
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_ProgramIDLSBLength 437
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_ProgramIDLSBLength_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_SupportedProtocolParametersValuesLength  33
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_SupportedProtocolParametersValuesLength_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_FlowDiscriminatorCount 430
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_FlowDiscriminatorCount_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_SupportedProtocolParametersValuesLength  37
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_SupportedProtocolParametersValuesLength_SIZE   8
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_data03_FlowDiscriminator 432
#define CSN1_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_data03_FlowDiscriminator_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_SupportedProtocolParametersValuesLength  41
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP_SupportedProtocolParametersValuesLength_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_FlowDiscriminatorCount 439
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_FlowDiscriminatorCount_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_SupportedProtocolParametersValuesLength  44
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP_SupportedProtocolParametersValuesLength_SIZE   8
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_data03_FlowDiscriminator 441
#define CSN1_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation_data01_data02_data03_FlowDiscriminator_SIZE   8


/* DEFINITIONS */
#define CSN1C_DEF_bit                    0
#define CSN1C_DEF_bit_string             2
#define CSN1C_DEF_spare_L                4
#define CSN1C_DEF_spare_bits             6
#define CSN1C_DEF_no_string             19
#define CSN1C_DEF_MLMFPA_SRP_INUSE_AttributeUpdateReject_contents  20
#define CSN1C_DEF_MLMFPA_DOSP_INUSE_DataOverSignaling_contents  24
#define CSN1C_DEF_MLMFPA_DOSP_INUSE_DataOverSignalingAck_contents  54
#define CSN1C_DEF_MLMFPA_LUP_INUSE_LocationNotification_contents  64
#define CSN1C_DEF_MLMFPA_LUP_INUSE_LocationAssignment_contents  94
#define CSN1C_DEF_MLMFPA_LUP_INUSE_LocationComplete_contents 119
#define CSN1C_DEF_MLMFPA_LUP_INUSE_StorageBLOBNotification_contents 123
#define CSN1C_DEF_MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents 147
#define CSN1C_DEF_MLMFPA_LUP_INUSE_StorageBLOBComplete_contents 176
#define CSN1C_DEF_MLMFPA_FCP_INUSE_DataReady_contents 180
#define CSN1C_DEF_MLMFPA_FCP_INUSE_DataReadyAck_contents 184
#define CSN1C_DEF_MLMFPA_FCP_INUSE_RestartNetworkInterface_contents 188
#define CSN1C_DEF_MLMFPA_FCP_INUSE_RestartNetworkInterfaceAck_contents 192
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP 196
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP 225
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP 254
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP 264
#define CSN1C_DEF_spare_bit            294
#define CSN1C_DEF_octet                296
#define CSN1C_DEF_spare_padding        298
#define CSN1C_DEF_padding_bits         314
#define CSN1C_DEF_pad_to_octet         322
#define CSN1C_DEF_EMFPKA_RSP_INUSE_RouteSelect_contents 332
#define CSN1C_DEF_EMFPKA_RSP_INUSE_RouteSelectAck_contents 345
#define CSN1C_DEF_EMFPKA_RSP_INUSE_ActivateRoute_contents 350
#define CSN1C_DEF_EMFPKA_RSP_INUSE_ActivateRouteAck_contents 363
#define CSN1C_DEF_EMFPKA_RLP_INUSE_ResetTxIndication_contents 368
#define CSN1C_DEF_EMFPKA_RLP_INUSE_ResetRxIndication_contents 381
#define CSN1C_DEF_EMFPKA_RLP_INUSE_ResetTxIndicationAck_contents 394
#define CSN1C_DEF_EMFPKA_RLP_INUSE_ResetTxComplete_contents 407
#define CSN1C_DEF_EMFPKA_RLP_INUSE_ResetRxComplete_contents 420
#define CSN1C_DEF_EMFPKA_RLP_INUSE_ReservationAccept_contents 433
#define CSN1C_DEF_EMFPKA_RLP_INUSE_FwdReservationAck_contents 438
#define CSN1C_DEF_EMFPKA_RLP_INUSE_AttributeUpdateAccept_contents 443
#define CSN1C_DEF_EMFPKA_RLP_INUSE_AttributeUpdateReject_contents 448
#define CSN1C_DEF_EMFPKA_DOSP_INUSE_DataOverSignaling_contents 453
#define CSN1C_DEF_EMFPKA_DOSP_INUSE_DataOverSignalingAck_contents 491
#define CSN1C_DEF_EMFPKA_LUP_INUSE_LocationNotification_contents 504
#define CSN1C_DEF_EMFPKA_LUP_INUSE_LocationAssignment_contents 539
#define CSN1C_DEF_EMFPKA_LUP_INUSE_LocationComplete_contents 570
#define CSN1C_DEF_EMFPKA_LUP_INUSE_StorageBLOBNotification_contents 575
#define CSN1C_DEF_EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents 602
#define CSN1C_DEF_EMFPKA_LUP_INUSE_StorageBLOBComplete_contents 633
#define CSN1C_DEF_EMFPKA_FCP_INUSE_DataReady_contents 638
#define CSN1C_DEF_EMFPKA_FCP_INUSE_DataReadyAck_contents 643
#define CSN1C_DEF_EMFPKA_FCP_INUSE_RestartNetworkInterface_contents 648
#define CSN1C_DEF_EMFPKA_FCP_INUSE_RestartNetworkInterfaceAck_contents 653
#define CSN1C_DEF_MLMFPA_RSP_INUSE_RouteSelect_contents 658
#define CSN1C_DEF_MLMFPA_RSP_INUSE_RouteSelectAck_contents 671
#define CSN1C_DEF_MLMFPA_RSP_INUSE_ActivateRoute_contents 676
#define CSN1C_DEF_MLMFPA_RSP_INUSE_ActivateRouteAck_contents 689
#define CSN1C_DEF_MLMFPA_SRP_INUSE_ResetTxIndication_contents 694
#define CSN1C_DEF_MLMFPA_SRP_INUSE_ResetRxIndication_contents 707
#define CSN1C_DEF_MLMFPA_SRP_INUSE_ResetTxIndicationAck_contents 720
#define CSN1C_DEF_MLMFPA_SRP_INUSE_ResetTxComplete_contents 733
#define CSN1C_DEF_MLMFPA_SRP_INUSE_ResetRxComplete_contents 746
#define CSN1C_DEF_MLMFPA_SRP_INUSE_ReservationAccept_contents 759
#define CSN1C_DEF_MLMFPA_SRP_INUSE_FwdReservationAck_contents 764
#define CSN1C_DEF_MLMFPA_SRP_INUSE_AttributeUpdateAccept_contents 769
#define CSN1C_DEF_MLMFPA_SRP_INUSE_Flush_contents 774
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles 814
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles 866
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows 918
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations 951
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd 984
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev 1009
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd 1034
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev 1077
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd 1120
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev 1163
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd 1206
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev 1249
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd 1292
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev 1335
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles 1378
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles 1430
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows 1482
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations 1515
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd 1548
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd 1573
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev 1602
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd 1627
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev 1670
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd 1713
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev 1756
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd 1799
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev 1842
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd 1885
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev 1928
#define CSN1C_DEF_EMFPKA_RLP_INUSE_RevReservationOn_contents 1971
#define CSN1C_DEF_EMFPKA_RLP_INUSE_RevReservationOff_contents 2001
#define CSN1C_DEF_EMFPKA_RLP_INUSE_FwdReservationOff_contents 2031
#define CSN1C_DEF_EMFPKA_RLP_INUSE_FwdReservationOn_contents 2061
#define CSN1C_DEF_MLMFPA_SRP_INUSE_MultiLinkNak_contents 2091
#define CSN1C_DEF_MLMFPA_SRP_INUSE_RevReservationOn_contents 2246
#define CSN1C_DEF_MLMFPA_SRP_INUSE_RevReservationOff_contents 2276
#define CSN1C_DEF_MLMFPA_SRP_INUSE_FwdReservationOff_contents 2306
#define CSN1C_DEF_MLMFPA_SRP_INUSE_FwdReservationOn_contents 2336
#define CSN1C_DEF_MLMFPA_SRP_INUSE_Nak_contents 2366
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd 2459
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev 2501
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation 2543
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd 2585
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev 2627
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation 2669
#define CSN1C_DEF_EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents 2711
#define CSN1C_DEF_EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents 2750
#define CSN1C_DEF_EMFPKA_RLP_INUSE_Nak_contents 2789
#define CSN1C_DEF_EMFPKA_RLP_INUSE_ReservationOnRequest_contents 2882
#define CSN1C_DEF_EMFPKA_RLP_INUSE_ReservationOffRequest_contents 2949
#define CSN1C_DEF_EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents 2992
#define CSN1C_DEF_MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents 3031
#define CSN1C_DEF_MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents 3070
#define CSN1C_DEF_MLMFPA_SRP_INUSE_ReservationOnRequest_contents 3109
#define CSN1C_DEF_MLMFPA_SRP_INUSE_ReservationOffRequest_contents 3176
#define CSN1C_DEF_MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents 3219
#define CSN1C_DEF_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation 3258
#define CSN1C_DEF_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation 3329
#define CSN1C_DEF_EMFPKA_RLP_INUSE_ReservationReject_contents 3400
#define CSN1C_DEF_MLMFPA_SRP_INUSE_ReservationReject_contents 3483
/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_EMFPA_INCFG_ConfigurationRequest_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_EMFPA_INCFG_ConfigurationResponse_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RSP_INUSE_RouteSelect_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RSP_INUSE_RouteSelect_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RSP_INUSE_RouteSelect_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RSP_INUSE_RouteSelect_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RSP_INUSE_RouteSelect_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RSP_INUSE_RouteSelectAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RSP_INUSE_RouteSelectAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RSP_INUSE_RouteSelectAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RSP_INUSE_RouteSelectAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RSP_INUSE_RouteSelectAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RSP_INUSE_ActivateRoute_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RSP_INUSE_ActivateRoute_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RSP_INUSE_ActivateRoute_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RSP_INUSE_ActivateRoute_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RSP_INUSE_ActivateRoute_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RSP_INUSE_ActivateRouteAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RSP_INUSE_ActivateRouteAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RSP_INUSE_ActivateRouteAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RSP_INUSE_ActivateRouteAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RSP_INUSE_ActivateRouteAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_ResetTxIndication_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_ResetTxIndication_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_ResetTxIndication_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_ResetTxIndication_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_ResetTxIndication_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_ResetRxIndication_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_ResetRxIndication_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_ResetRxIndication_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_ResetRxIndication_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_ResetRxIndication_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_ResetTxIndicationAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_ResetTxIndicationAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_ResetTxIndicationAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_ResetTxIndicationAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_ResetTxIndicationAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_ResetTxComplete_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_ResetTxComplete_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_ResetTxComplete_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_ResetTxComplete_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_ResetTxComplete_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_ResetRxComplete_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_ResetRxComplete_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_ResetRxComplete_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_ResetRxComplete_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_ResetRxComplete_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_Nak_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_Nak_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_Nak_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_Nak_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_Nak_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_ReservationOnRequest_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_ReservationOnRequest_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_ReservationOnRequest_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_ReservationOnRequest_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_ReservationOnRequest_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_ReservationOffRequest_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_ReservationOffRequest_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_ReservationOffRequest_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_ReservationOffRequest_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_ReservationOffRequest_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_ReservationAccept_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_ReservationAccept_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_ReservationAccept_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_ReservationAccept_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_ReservationAccept_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_ReservationReject_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_ReservationReject_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_ReservationReject_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_ReservationReject_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_ReservationReject_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_RevReservationOn_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_RevReservationOn_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_RevReservationOn_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_RevReservationOn_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_RevReservationOn_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_RevReservationOff_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_RevReservationOff_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_RevReservationOff_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_RevReservationOff_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_RevReservationOff_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_FwdReservationOff_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_FwdReservationOff_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_FwdReservationOff_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_FwdReservationOff_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_FwdReservationOff_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_FwdReservationOn_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_FwdReservationOn_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_FwdReservationOn_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_FwdReservationOn_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_FwdReservationOn_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_FwdReservationAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_FwdReservationAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_FwdReservationAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_FwdReservationAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_FwdReservationAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_AttributeUpdateRequest_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_AttributeUpdateAccept_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_AttributeUpdateAccept_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_AttributeUpdateAccept_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_AttributeUpdateAccept_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_AttributeUpdateAccept_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_RLP_INUSE_AttributeUpdateReject_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_RLP_INUSE_AttributeUpdateReject_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_RLP_INUSE_AttributeUpdateReject_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_RLP_INUSE_AttributeUpdateReject_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_RLP_INUSE_AttributeUpdateReject_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_DOSP_INUSE_DataOverSignaling_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_DOSP_INUSE_DataOverSignaling_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_DOSP_INUSE_DataOverSignaling_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_DOSP_INUSE_DataOverSignaling_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_DOSP_INUSE_DataOverSignaling_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_DOSP_INUSE_DataOverSignalingAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_DOSP_INUSE_DataOverSignalingAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_DOSP_INUSE_DataOverSignalingAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_DOSP_INUSE_DataOverSignalingAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_DOSP_INUSE_DataOverSignalingAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_LUP_INUSE_LocationNotification_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_LUP_INUSE_LocationNotification_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_LUP_INUSE_LocationNotification_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_LUP_INUSE_LocationNotification_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_LUP_INUSE_LocationNotification_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_LUP_INUSE_LocationAssignment_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_LUP_INUSE_LocationAssignment_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_LUP_INUSE_LocationAssignment_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_LUP_INUSE_LocationAssignment_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_LUP_INUSE_LocationAssignment_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_LUP_INUSE_LocationComplete_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_LUP_INUSE_LocationComplete_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_LUP_INUSE_LocationComplete_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_LUP_INUSE_LocationComplete_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_LUP_INUSE_LocationComplete_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_LUP_INUSE_StorageBLOBNotification_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_LUP_INUSE_StorageBLOBNotification_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_LUP_INUSE_StorageBLOBNotification_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_LUP_INUSE_StorageBLOBNotification_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_LUP_INUSE_StorageBLOBNotification_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_LUP_INUSE_StorageBLOBAssignment_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_LUP_INUSE_StorageBLOBComplete_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_LUP_INUSE_StorageBLOBComplete_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_LUP_INUSE_StorageBLOBComplete_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_LUP_INUSE_StorageBLOBComplete_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_LUP_INUSE_StorageBLOBComplete_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_FCP_INUSE_DataReady_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_FCP_INUSE_DataReady_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_FCP_INUSE_DataReady_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_FCP_INUSE_DataReady_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_FCP_INUSE_DataReady_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_FCP_INUSE_DataReadyAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_FCP_INUSE_DataReadyAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_FCP_INUSE_DataReadyAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_FCP_INUSE_DataReadyAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_FCP_INUSE_DataReadyAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_FCP_INUSE_RestartNetworkInterface_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_FCP_INUSE_RestartNetworkInterface_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_FCP_INUSE_RestartNetworkInterface_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_FCP_INUSE_RestartNetworkInterface_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_FCP_INUSE_RestartNetworkInterface_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "EMFPKA_FCP_INUSE_RestartNetworkInterfaceAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_EMFPKA_FCP_INUSE_RestartNetworkInterfaceAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_EMFPKA_FCP_INUSE_RestartNetworkInterfaceAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_EMFPKA_FCP_INUSE_RestartNetworkInterfaceAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_EMFPKA_FCP_INUSE_RestartNetworkInterfaceAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_MMFPA_INCFG_ConfigurationRequest_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_MMFPA_INCFG_ConfigurationResponse_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_RSP_INUSE_RouteSelect_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_RSP_INUSE_RouteSelect_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_RSP_INUSE_RouteSelect_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_RSP_INUSE_RouteSelect_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_RSP_INUSE_RouteSelect_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_RSP_INUSE_RouteSelectAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_RSP_INUSE_RouteSelectAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_RSP_INUSE_RouteSelectAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_RSP_INUSE_RouteSelectAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_RSP_INUSE_RouteSelectAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_RSP_INUSE_ActivateRoute_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_RSP_INUSE_ActivateRoute_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_RSP_INUSE_ActivateRoute_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_RSP_INUSE_ActivateRoute_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_RSP_INUSE_ActivateRoute_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_RSP_INUSE_ActivateRouteAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_RSP_INUSE_ActivateRouteAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_RSP_INUSE_ActivateRouteAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_RSP_INUSE_ActivateRouteAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_RSP_INUSE_ActivateRouteAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_ResetTxIndication_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_ResetTxIndication_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_ResetTxIndication_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_ResetTxIndication_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_ResetTxIndication_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_ResetRxIndication_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_ResetRxIndication_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_ResetRxIndication_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_ResetRxIndication_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_ResetRxIndication_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_ResetTxIndicationAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_ResetTxIndicationAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_ResetTxIndicationAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_ResetTxIndicationAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_ResetTxIndicationAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_ResetTxComplete_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_ResetTxComplete_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_ResetTxComplete_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_ResetTxComplete_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_ResetTxComplete_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_ResetRxComplete_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_ResetRxComplete_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_ResetRxComplete_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_ResetRxComplete_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_ResetRxComplete_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_MultiLinkNak_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_MultiLinkNak_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_MultiLinkNak_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_MultiLinkNak_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_MultiLinkNak_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_ReservationOnRequest_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_ReservationOnRequest_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_ReservationOnRequest_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_ReservationOnRequest_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_ReservationOnRequest_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_ReservationOffRequest_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_ReservationOffRequest_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_ReservationOffRequest_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_ReservationOffRequest_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_ReservationOffRequest_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_ReservationAccept_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_ReservationAccept_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_ReservationAccept_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_ReservationAccept_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_ReservationAccept_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_ReservationReject_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_ReservationReject_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_ReservationReject_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_ReservationReject_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_ReservationReject_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_RevReservationOn_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_RevReservationOn_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_RevReservationOn_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_RevReservationOn_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_RevReservationOn_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_RevReservationOff_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_RevReservationOff_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_RevReservationOff_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_RevReservationOff_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_RevReservationOff_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_FwdReservationOff_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_FwdReservationOff_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_FwdReservationOff_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_FwdReservationOff_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_FwdReservationOff_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_FwdReservationOn_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_FwdReservationOn_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_FwdReservationOn_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_FwdReservationOn_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_FwdReservationOn_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_FwdReservationAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_FwdReservationAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_FwdReservationAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_FwdReservationAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_FwdReservationAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_AttributeUpdateRequest_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_AttributeUpdateAccept_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_AttributeUpdateAccept_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_AttributeUpdateAccept_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_AttributeUpdateAccept_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_AttributeUpdateAccept_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_AttributeUpdateReject_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_AttributeUpdateReject_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_AttributeUpdateReject_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_AttributeUpdateReject_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_AttributeUpdateReject_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_Flush_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_Flush_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_Flush_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_Flush_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_Flush_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_SRP_INUSE_Nak_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_SRP_INUSE_Nak_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_SRP_INUSE_Nak_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_SRP_INUSE_Nak_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_SRP_INUSE_Nak_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_DOSP_INUSE_DataOverSignaling_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_DOSP_INUSE_DataOverSignaling_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_DOSP_INUSE_DataOverSignaling_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_DOSP_INUSE_DataOverSignaling_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_DOSP_INUSE_DataOverSignaling_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_DOSP_INUSE_DataOverSignalingAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_DOSP_INUSE_DataOverSignalingAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_DOSP_INUSE_DataOverSignalingAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_DOSP_INUSE_DataOverSignalingAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_DOSP_INUSE_DataOverSignalingAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_LUP_INUSE_LocationNotification_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_LUP_INUSE_LocationNotification_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_LUP_INUSE_LocationNotification_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_LUP_INUSE_LocationNotification_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_LUP_INUSE_LocationNotification_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_LUP_INUSE_LocationAssignment_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_LUP_INUSE_LocationAssignment_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_LUP_INUSE_LocationAssignment_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_LUP_INUSE_LocationAssignment_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_LUP_INUSE_LocationAssignment_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_LUP_INUSE_LocationComplete_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_LUP_INUSE_LocationComplete_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_LUP_INUSE_LocationComplete_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_LUP_INUSE_LocationComplete_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_LUP_INUSE_LocationComplete_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_LUP_INUSE_StorageBLOBNotification_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_LUP_INUSE_StorageBLOBNotification_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_LUP_INUSE_StorageBLOBNotification_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_LUP_INUSE_StorageBLOBNotification_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_LUP_INUSE_StorageBLOBNotification_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_LUP_INUSE_StorageBLOBAssignment_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_LUP_INUSE_StorageBLOBComplete_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_LUP_INUSE_StorageBLOBComplete_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_LUP_INUSE_StorageBLOBComplete_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_LUP_INUSE_StorageBLOBComplete_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_LUP_INUSE_StorageBLOBComplete_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_FCP_INUSE_DataReady_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_FCP_INUSE_DataReady_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_FCP_INUSE_DataReady_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_FCP_INUSE_DataReady_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_FCP_INUSE_DataReady_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_FCP_INUSE_DataReadyAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_FCP_INUSE_DataReadyAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_FCP_INUSE_DataReadyAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_FCP_INUSE_DataReadyAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_FCP_INUSE_DataReadyAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_FCP_INUSE_RestartNetworkInterface_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_FCP_INUSE_RestartNetworkInterface_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_FCP_INUSE_RestartNetworkInterface_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_FCP_INUSE_RestartNetworkInterface_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_FCP_INUSE_RestartNetworkInterface_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "MLMFPA_FCP_INUSE_RestartNetworkInterfaceAck_contents".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_MLMFPA_FCP_INUSE_RestartNetworkInterfaceAck_contents (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_MLMFPA_FCP_INUSE_RestartNetworkInterfaceAck_contents* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_MLMFPA_FCP_INUSE_RestartNetworkInterfaceAck_contents (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_MLMFPA_FCP_INUSE_RestartNetworkInterfaceAck_contents* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_MaxReservations* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Enhanced_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedQoSProfiles* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ANSupportedQoSProfiles* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxLinkFlows* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_MaxReservations* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNSequenceLengthFwd* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersFwd* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNTimersRev* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationFwd* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNReservationRev* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestFwd* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSRequestRev* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseFwd* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKQoSResponseRev* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersFwd* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNFlowProtocolParametersRev* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersFwd* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_FlowNNRouteProtocolParametersRev* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedFlowProtocolParametersPP* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ATSupportedRouteProtocolParametersPP* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSFlowIDAssociation* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));

/*----------------------------------------------------------------------------
	Encoding/decoding functions for "RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation".
	It returns number of bits used or <0 in case of error.
----------------------------------------------------------------------------*/
ED_EXPORT_CALL (ED_EXLONG, ENCODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation (char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, const c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation* ED_CONST Source, struct SCSN1CContextSet* pCSN1CContextSet));

ED_EXPORT_CALL (ED_EXLONG, DECODE_c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation (const char* ED_CONST Buffer, ED_CONST ED_EXLONG BitOffset, c_RPD_Multi_link_Multi_Flow_Packet_Application_Attributes_ReservationKKBCMCSProgramIDAssociation* ED_CONST Destin, ED_EXLONG Length, struct SCSN1CContextSet* pCSN1CContextSet));


#ifdef __cplusplus
	}
#endif
#endif

