

#ifndef __QOS_FC_STATUS_H__
#define __QOS_FC_STATUS_H__

#ifdef __cplusplus
#if __cplusplus
extern "C" {
#endif
#endif


/*****************************************************************************
  1 其他头文件包含
*****************************************************************************/

#if (VOS_OS_VER != VOS_WIN32)
#pragma pack(4)
#else
#pragma pack(push, 4)
#endif

/*****************************************************************************
  2 宏定义
*****************************************************************************/
#define QOS_FC_SLOW_UP      3

/*****************************************************************************
  3 Massage Declare
*****************************************************************************/

/*****************************************************************************
  4 枚举定义
*****************************************************************************/
/*****************************************************************************
 结构名    : QOS_FC_STATE_ENUM
 协议表格  :
 ASN.1描述 :
 结构说明  : 定义流控状态
*****************************************************************************/
typedef enum QOS_FC_STATE
{
    QOS_FC_STATE_NORMAL,        /* 正常数传状态 */
    QOS_FC_STATE_FLOWCTRL,      /* 流控状态 */
    QOS_FC_STATE_BUTT
} QOS_FC_STATE_ENUM;

typedef VOS_UINT32 QOS_FC_STATE_ENUM_UINT32;


/*****************************************************************************
   5 STRUCT定义
*****************************************************************************/
/*****************************************************************************
 结构名    : QOS_FC_CONTROL_STRU
 协议表格  :
 ASN.1描述 :
 结构说明  : 定义QOS流控控制结构
*****************************************************************************/
typedef struct QOS_FC_CONTROL
{
    VOS_BOOL            bQosFcEnable;               /* QoS流控是否使能 */
    VOS_BOOL            bHighFcEnable;              /* 最高优先级承载是否流控 */
    VOS_BOOL            bHighDiscardEnable;         /* 最高优先级承载是否丢包 */
    VOS_UINT32          ulPktCntLimit;              /* 触发QoS流控包数 */
    HTIMER              hTimer;
    VOS_UINT32          ulTimerLen;                 /* 触发QoS流控时长 */
    VOS_UINT32          ulRandomDiscardRate;        /* 随机丢包率 */
    VOS_UINT32          ulDiscardRate;              /* 丢包率 */
    VOS_UINT32          ulWarningThres;             /* 警告阈值，除必须保留的承载外全部置为丢包状态 */
    VOS_UINT32          ulDiscardThres;             /* 丢包阈值，从低优先级承载开始置承载为丢包状态 */
    VOS_UINT32          ulRandomDiscardThres;       /* 随机丢包阈值，从低优先级承载开始置承载为随机丢包状态 */
    VOS_UINT32          ulRestoreThres;             /* 恢复阈值，从高优先级承载开始逐渐恢复承载数传 */
    QOS_FC_STATE_ENUM_UINT32 enFlowCtrl;            /* 是否在流控中 */
} QOS_FC_CONTROL_STRU;



/*****************************************************************************
  6 UNION定义
*****************************************************************************/


/*****************************************************************************
  7 全局变量声明
*****************************************************************************/
extern QOS_FC_CONTROL_STRU g_stQosFcCtrl;

/*****************************************************************************
  8 函数声明
*****************************************************************************/


/*****************************************************************************
  9 OTHERS定义
*****************************************************************************/


#if (VOS_OS_VER != VOS_WIN32)
#pragma pack()
#else
#pragma pack(pop)
#endif




#ifdef __cplusplus
    #if __cplusplus
        }
    #endif
#endif

#endif

