/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2014

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2014-12-27
 * @file
 * @brief
 *
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef HSM_MMA_PIF_H
#define HSM_MMA_PIF_H

/*******************************************************************************
 1. Other files included
*******************************************************************************/

#include "vos.h"

#ifdef __cplusplus
#if __cplusplus
    extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/
#define HSM_MMA_UATI_OCTET_LENGTH                          (16)

/* MEID byte number */
#define HSM_MMA_MEID_OCTET_NUM                             (7)


/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : HSM_MMA_PIF_MSG_TYPE_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum HSM_MMA_PIF_MSG_TYPE_ENUM
{
    ID_HSM_MMA_HRPD_SYS_INFO_IND        = 0x0001, /* _H2ASN_MsgChoice HSM_MMA_HRPD_SYS_INFO_IND_STRU*/ /**< @sa HSM_MMA_HRPD_SYS_INFO_IND_STRU */
    ID_HSM_MMA_HARDWARE_SYS_INFO_IND    = 0x0002, /* _H2ASN_MsgChoice HSM_MMA_HARDWARE_SYS_INFO_IND_STRU*/ /**< @sa HSM_MMA_HARDWARE_SYS_INFO_IND_STRU */
    ID_HSM_MMA_PIF_MSG_TYPE_ENUM_BUTT   = 0xFFFF
};
typedef VOS_UINT16 HSM_MMA_PIF_MSG_TYPE_ENUM_UINT16;


/** ****************************************************************************
 * Name        : HSM_MMA_SESSION_STATUS_ENUM_UINT8
 *
 * Description : Enum definition for session status
 History     :
  1.Date     : 2015-08-08
    Author   : Y00213812
    Modify   : create
 *******************************************************************************/
enum HSM_MMA_SESSION_STATUS_ENUM
{
    HSM_MMA_SESSION_STATUS_CLOSE              = 0x00,
    HSM_MMA_SESSION_STATUS_OPEN               = 0x01,
    HSM_MMA_SESSION_STATUS_BUTT               = 0x02
};
typedef VOS_UINT8 HSM_MMA_SESSION_STATUS_ENUM_UINT8;


/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/

/*******************************************************************************
 6. STRUCT and UNION declaration
*******************************************************************************/

/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : HSM_MMA_HRPD_SYS_INFO_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                          /* _H2ASN_Skip */
    HSM_MMA_PIF_MSG_TYPE_ENUM_UINT16    enMsgId;            /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    VOS_UINT32                          ulSessionSeed;          /*RATI*/
    VOS_UINT8                           aucCurUATI[HSM_MMA_UATI_OCTET_LENGTH]; /*UATI*/
    HSM_MMA_SESSION_STATUS_ENUM_UINT8   enSessionStatus;
    VOS_UINT8                           aucReserve[3];
} HSM_MMA_HRPD_SYS_INFO_IND_STRU;

typedef struct
{
    VOS_MSG_HEADER                                          /* _H2ASN_Skip */
    HSM_MMA_PIF_MSG_TYPE_ENUM_UINT16    enMsgId;            /* _H2ASN_Skip */
    MODEM_ID_ENUM_UINT16                enModemId;
    VOS_UINT32                          ulEsn;                              /* 32-bit */
    VOS_UINT8                           aucMeId[HSM_MMA_MEID_OCTET_NUM];    /* 56-bit */
    VOS_UINT8                           ucReserved[2];
}HSM_MMA_HARDWARE_SYS_INFO_IND_STRU;

/** ****************************************************************************
 * Name        : HSM_MMA_PIF_MSG_DATA
 * Description : H2ASN top level message structure definition
 *******************************************************************************/
typedef struct
{
    HSM_MMA_PIF_MSG_TYPE_ENUM_UINT16    enMsgId;     /* _H2ASN_MsgChoice_Export HSM_MMA_PIF_MSG_TYPE_ENUM_UINT16 */
    VOS_UINT8                           aucMsgBlock[2];

    /* _H2ASN_MsgChoice_When_Comment HSM_MMA_PIF_MSG_TYPE_ENUM_UINT16 */
}HSM_MMA_PIF_MSG_DATA;

/* _H2ASN_Length UINT32*/
/** ****************************************************************************
 * Name        : HSM_MMA_PIF
 * Description : H2ASN top level message structure definition
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    HSM_MMA_PIF_MSG_DATA                stMsgData;
}HSM_MMA_PIF;

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*******************************************************************************
 9. Function declarations
*******************************************************************************/

#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */

#endif
