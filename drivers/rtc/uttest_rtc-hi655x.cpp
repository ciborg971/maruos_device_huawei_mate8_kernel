/******************************************************************************

                  版权所有 (C), 2001-2011, 华为技术有限公司

 ******************************************************************************
  文 件 名   : test_rtc_hi6552.cpp
  版 本 号   : 初稿
  作    者   :
  生成日期   : 2014年04月10日
  最近修改   :
  功能描述   : UT测试脚本
  函数列表   :
  修改历史   :
  1.日    期   : 2014年04月10日
    作    者   : 
    修改内容   : 创建文件

******************************************************************************/

/*****************************************************************************
  1 头文件包含
*****************************************************************************/
#include "gtest/gtest.h"
#include "llt_mockcpp.h"

using namespace testing;

#ifdef __cplusplus
extern "C"
{
#endif

//struct soc_rtc_dev {
//	struct rtc_device *rtc_dev;
//	void  *baseaddr;
//};

/*****************************************************************************
  2 全局变量定义
*****************************************************************************/
#define ENODEV           19
#define ENOMEM          12
#define ENOENT           2
#define EIO                  5

struct rtc_time {
	unsigned int tm_sec;
	unsigned int tm_min;
	unsigned int tm_hour;
	unsigned int tm_mday;
	unsigned int tm_mon;
	unsigned int tm_year;
	unsigned int tm_wday;
	unsigned int tm_yday;
	unsigned int tm_isdst;
	};

extern struct soc_rtc_dev prtc;
extern struct rtc_wkalrm poweroff_rtc_alarm;
typedef int gfp_t;
typedef int irq_handler_t;
/*****************************************************************************
  3 函数声明
*****************************************************************************/
extern void test_pmu_get_time(void);
extern void test_pmu_set_time(void);
extern void test_pmu_get_alarm_time(void);
extern void test_pmu_set_alarm_time(void);
extern void test_pmu_read_alarm(void);
extern int test_pmu_write_alarm(void);
extern int test_soc_rtc_read_time(void);
extern int test_soc_rtc_set_time(void);
extern int test_soc_rtc_alarm_irq_enable(unsigned int enable);
extern int test_soc_rtc_read_alarm(void);
extern int test_soc_rtc_set_alarm(void);
extern int test_oem_rtc_reboot_thread(void);
extern void test_oem_rtc_reboot(void);
extern int test_pmu_rtc_interrupt(void);
extern int test_soc_rtc_interrupt(void);
extern int test_hi6210_rtc_shutdown(void);
extern int test_hi6210_rtc_remove(void);
extern int test_hi6210_rtc_probe_nodev(void);
extern int test_hi6210_rtc_probe(void);
extern void pmu_set_time(unsigned long time);
extern void pmu_get_alarm_time(unsigned long  *time);
extern void pmu_set_alarm_time(unsigned long time);
extern void pmu_get_time(unsigned long  *time);
extern void pmu_read_alarm(struct rtc_time *tm);
extern int soc_rtc_alarm_irq_enable(struct device *dev, unsigned int enabled);
extern int pmu_write_alarm(struct rtc_time *tm);
extern void pmu_set_alarm_time(unsigned long time);
extern unsigned char hi6xxx_pmic_reg_read(unsigned int reg_addr);
extern void hi6xxx_pmic_reg_write (unsigned int reg_addr, unsigned char regval);
extern void *dev_get_drvdata(const struct device *dev);
extern void writel(unsigned val, unsigned addr);
extern void rtc_device_unregister(struct rtc_device *rtc);
extern void emergency_remount(void);
extern long sys_sync(void);
extern void kernel_restart(char *cmd);
extern void panic(char *msg);
extern pid_t kernel_thread(int (*fn)(void *), void *arg, unsigned long flags);
extern unsigned int get_pd_charge_flag(void);
extern void rtc_update_irq(struct rtc_device *rtc, unsigned long num, unsigned long events);
extern void free_irq(unsigned int irq, void *dev_id);
extern void iounmap(volatile void *addr);
extern int rtc_valid_tm(struct rtc_time *tm);
extern int rtc_tm_to_time(struct rtc_time *tm, unsigned int *time);
extern struct rtc_time rtc_time_to_tm(unsigned int time, struct rtc_time *tm);
extern unsigned readl(void *addr);
extern void rtc_device_unregister(struct rtc_device *rtc);
extern void kfree(void *ptr);

extern void * devm_kmalloc(struct device *dev, size_t size, gfp_t gfp);
extern int ut_rtc_valid_tm_zero(void);
extern int ut_rtc_valid_tm_one(void);
extern void *rtc_dev_get_drvdata(const struct device *dev);
extern int platform_get_irq_byname(struct platform_device *dev, const char *name);
extern void* __arm_ioremap(unsigned long add, size_t size, unsigned int type);
extern void __arm_iounmap(volatile void  *io_addr);
extern void __iounmap(volatile void  *io_addr);
extern void* __ioremap(unsigned long add, size_t size, unsigned int type);
extern int dev_set_drvdata(struct device *dev, void *data);
extern struct rtc_device *rtc_device_register(const char *name, struct device *dev,const struct rtc_class_ops *ops,struct module *owner);
extern int request_threaded_irq(unsigned int irq, irq_handler_t handler,irq_handler_t thread_fn,unsigned long flags, const char *name, void *dev);
extern void rtc_device_unregister(struct rtc_device *rtc);
extern void hi6xxx_pmic_reg_write (unsigned int reg_addr, unsigned char regval);
extern unsigned int get_pd_charge_flag(void);

extern int platform_set_drvdata(struct device *dev, void *data);
extern int ut_platform_set_drvdata(struct device *dev, void *data);
extern int device_init_wakeup(struct device *dev, bool enable);
extern void *ioremap(unsigned long paddr, unsigned long size);
extern unsigned long hisi_lookup_va(unsigned long pa);

extern  inline void tasklet_schedule(struct tasklet_struct *tasklet);
extern  inline void ut_tasklet_schedule(struct tasklet_struct *tasklet);
extern  void init_timer_key(struct timer_list *timer, unsigned int flags,
		    const char *name, struct lock_class_key *key);
extern void add_timer(struct timer_list *timer);

#ifdef __cplusplus
}
#endif

void ut_iounmap(volatile void *addr)
{

}

void ut__arm_iounmap(volatile void *addr)
{

}

void ut_rtc_device_unregister(struct rtc_device *rtc)
{

}

void ut_init_timer_key(struct timer_list *timer, unsigned int flags,
		    const char *name, struct lock_class_key *key)
{
}

void ut_add_timer(struct timer_list *timer)
{
}

/*****************************************************************************
 被测函数  : pmu_get_time
 被测功能  : UT001_pmu_get_time
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/
TEST(test_test_pmu_get_time, UT001_pmu_get_time)
{
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
    	MOCKER(hi6xxx_pmic_reg_read).stubs().will(returnValue(0));
    test_pmu_get_time();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/	
    GlobalMockObject::reset();
}


/*****************************************************************************
 被测函数  : pmu_set_time
 被测功能  : UT001_pmu_set_time
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/
TEST(test_test_pmu_set_time, UT001_pmu_set_time)
{
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
    	MOCKER(hi6xxx_pmic_reg_write).stubs().will(returnValue(0));
    test_pmu_set_time();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/	
    GlobalMockObject::reset();
}


/*****************************************************************************
 被测函数  : pmu_get_alarm_time
 被测功能  : UT001_pmu_get_alarm_time
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/
TEST(test_test_pmu_get_alarm_time, UT001_pmu_get_alarm_time)
{
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(hi6xxx_pmic_reg_read).stubs().will(returnValue(0));
    test_pmu_get_alarm_time();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}


/*****************************************************************************
 被测函数  : pmu_set_alarm_time
 被测功能  : UT001_pmu_set_alarm_time
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/
TEST(test_test_pmu_set_alarm_time, UT001_pmu_set_alarm_time)
{
    unsigned int time = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(hi6xxx_pmic_reg_write).stubs().will(returnValue(0));
	MOCKER(hi6xxx_pmic_reg_read).stubs().will(returnValue(0));
    test_pmu_set_alarm_time();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}




/*****************************************************************************
 被测函数  : pmu_read_alarm
 被测功能  : UT001_pmu_read_alarm
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/
TEST(test_test_pmu_read_alarm, UT001_pmu_read_alarm)
{
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(pmu_get_alarm_time).stubs().will(returnValue(0));
    test_pmu_read_alarm();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}



/*****************************************************************************
 被测函数  : pmu_write_alarm
 被测功能  : UT001_pmu_write_alarm_ok
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/
TEST(test_test_pmu_write_alarm, UT001_pmu_write_alarm_ok)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(pmu_set_alarm_time).stubs().will(returnValue(0));
    ret = test_pmu_write_alarm();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}

/*****************************************************************************
 被测函数  : pmu_write_alarm
 被测功能  : UT002_pmu_write_alarm_fail
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/
TEST(test_test_pmu_write_alarm, UT002_pmu_write_alarm_fail)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
    MOCKER(rtc_valid_tm).stubs().will(invoke(ut_rtc_valid_tm_one));

    ret = test_pmu_write_alarm();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(-1,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
    GlobalMockObject::reset();

}

/*****************************************************************************
 被测函数  : soc_rtc_read_time
 被测功能  : UT001_soc_rtc_read_time
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_soc_rtc_read_time, UT001_soc_rtc_read_time)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
    MOCKER(pmu_get_time).stubs().will(returnValue(0));

    ret = test_soc_rtc_read_time();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
    GlobalMockObject::reset();

}

/*****************************************************************************
 被测函数  : soc_rtc_set_time
 被测功能  : UT001_soc_rtc_set_time_ok
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_soc_rtc_set_time, UT001_soc_rtc_set_time_ok)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(dev_get_drvdata).stubs().will(invoke(rtc_dev_get_drvdata));
	MOCKER(rtc_valid_tm).stubs().will(invoke(ut_rtc_valid_tm_zero));
	MOCKER(pmu_set_time).stubs().will(returnValue(0));
    ret = test_soc_rtc_set_time();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}

/*****************************************************************************
 被测函数  : soc_rtc_set_time
 被测功能  : UT002_soc_rtc_set_time_fail
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_soc_rtc_set_time, UT002_soc_rtc_set_time_fail)
{
    int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(dev_get_drvdata).stubs().will(invoke(rtc_dev_get_drvdata));
    MOCKER(rtc_valid_tm).stubs().will(invoke(ut_rtc_valid_tm_one));

    ret = test_soc_rtc_set_time();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(-1,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}

/*****************************************************************************
 被测函数  : soc_rtc_alarm_irq_enable
 被测功能  : UT001_soc_rtc_alarm_irq_enable
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_soc_rtc_alarm_irq_enable, UT001_soc_rtc_alarm_irq_enable)
{
    int ret = 0;
	unsigned int sw = 1;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(dev_get_drvdata).stubs().will(invoke(rtc_dev_get_drvdata));

    ret = test_soc_rtc_alarm_irq_enable(sw);
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();

}


/*****************************************************************************
 被测函数  : soc_rtc_alarm_irq_enable
 被测功能  : UT002_soc_rtc_alarm_irq_disable
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_soc_rtc_alarm_irq_enable, UT002_soc_rtc_alarm_irq_disable)
{
    int ret = 0;
    unsigned int sw = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(dev_get_drvdata).stubs().will(invoke(rtc_dev_get_drvdata));

    ret = test_soc_rtc_alarm_irq_enable(sw);
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();

}


/*****************************************************************************
 被测函数  : soc_rtc_read_alarm
 被测功能  : UT001_soc_rtc_read_alarm
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_soc_rtc_read_alarm, UT001_soc_rtc_read_alarm)
{
    int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(dev_get_drvdata).stubs().will(invoke(rtc_dev_get_drvdata));

    ret = test_soc_rtc_read_alarm();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();

}


/*****************************************************************************
 被测函数  : soc_rtc_set_alarm
 被测功能  : UT001_soc_rtc_set_alarm
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_soc_rtc_set_alarm, UT001_soc_rtc_set_alarm)
{
    int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(dev_get_drvdata).stubs().will(invoke(rtc_dev_get_drvdata));
	MOCKER(rtc_valid_tm).stubs().will(invoke(ut_rtc_valid_tm_zero));
	MOCKER(soc_rtc_alarm_irq_enable).stubs().will(returnValue(0));
    ret = test_soc_rtc_set_alarm();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}


/*****************************************************************************
 被测函数  : soc_rtc_set_alarm
 被测功能  : UT002_soc_rtc_set_alarm
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_soc_rtc_set_alarm, UT002_soc_rtc_set_alarm)
{
    int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(dev_get_drvdata).stubs().will(invoke(rtc_dev_get_drvdata));
    MOCKER(rtc_valid_tm).stubs().will(invoke(ut_rtc_valid_tm_one));
    ret = test_soc_rtc_set_alarm();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(-1,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}

#if 0
/*****************************************************************************
 被测函数  : soc_rtc_set_alarm
 被测功能  : UT003_soc_rtc_set_alarm
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_soc_rtc_set_alarm, UT003_soc_rtc_set_alarm)
{
    int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(dev_get_drvdata).stubs().will(invoke(rtc_dev_get_drvdata));
    MOCKER(rtc_tm_to_time).stubs().will(invoke(ut_rtc_tm_to_time_zero));

    ret = test_soc_rtc_set_alarm();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(-1,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}

/*****************************************************************************
 被测函数  : oem_rtc_reboot_thread
 被测功能  : UT001_oem_rtc_reboot_thread
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_oem_rtc_reboot_thread, UT001_oem_rtc_reboot_thread)
{
    int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
    MOCKER(emergency_remount).stubs().will(returnValue(0));
    MOCKER(sys_sync).stubs().will(returnValue(0));
    MOCKER(kernel_restart).stubs().will(returnValue(0));
  //  MOCKER(panic).stubs().will(returnValue(0));

    ret = test_oem_rtc_reboot_thread();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0,ret);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
    GlobalMockObject::reset();

}
#endif

/*****************************************************************************
 被测函数  : oem_rtc_reboot
 被测功能  : UT001_oem_rtc_reboot
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_oem_rtc_reboot, UT001_oem_rtc_reboot)
{
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
    MOCKER(kernel_thread).stubs().will(returnValue(0));

    test_oem_rtc_reboot();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
    GlobalMockObject::reset();

}

/*****************************************************************************
 被测函数  : pmu_rtc_interrupt
 被测功能  : UT001_pmu_rtc_interrupt
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_pmu_rtc_interrupt, UT001_pmu_rtc_interrupt)
{
    int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(hi6xxx_pmic_reg_read).stubs().will(returnValue(0));
    ret = test_pmu_rtc_interrupt();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    
    EXPECT_EQ(0,ret);
    
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}


/*****************************************************************************
 被测函数  : pmu_rtc_interrupt
 被测功能  : UT002_pmu_rtc_interrupt
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_pmu_rtc_interrupt, UT002_pmu_rtc_interrupt)
{
    int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(hi6xxx_pmic_reg_read).stubs().will(returnValue(0xff));
	MOCKER(hi6xxx_pmic_reg_write).stubs().will(returnValue(0));
    MOCKER(get_pd_charge_flag).stubs().will(returnValue((unsigned int )0));

    ret = test_pmu_rtc_interrupt();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/    
    EXPECT_EQ(1,ret);
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}


/*****************************************************************************
 被测函数  : pmu_rtc_interrupt
 被测功能  : UT003_pmu_rtc_interrupt
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_pmu_rtc_interrupt, UT003_pmu_rtc_interrupt)
{
    int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(hi6xxx_pmic_reg_read).stubs().will(returnValue(0xff));
	MOCKER(hi6xxx_pmic_reg_write).stubs().will(returnValue(0));
    MOCKER(get_pd_charge_flag).stubs().will(returnValue((unsigned int )0));

    ret = test_pmu_rtc_interrupt();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/    
    EXPECT_EQ(1,ret);   
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();

}

#if 0
/*****************************************************************************
 被测函数  : soc_rtc_interrupt
 被测功能  : UT001_soc_rtc_interrupt
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_soc_rtc_interrupt, UT001_soc_rtc_interrupt)
{
    int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(readl).stubs().will(invoke(readl_zero));

    ret = test_soc_rtc_interrupt();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/    
    EXPECT_EQ(0,ret);    
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}


/*****************************************************************************
 被测函数  : soc_rtc_interrupt
 被测功能  : UT002_soc_rtc_interrupt
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_soc_rtc_interrupt, UT002_soc_rtc_interrupt)
{
    int ret = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(readl).stubs().will(invoke(readl_true));
    MOCKER(rtc_update_irq).stubs().will(returnValue(0));

    ret = test_soc_rtc_interrupt();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/   
    EXPECT_EQ(1,ret);   
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}


/*****************************************************************************
 被测函数  : soc_rtc_interrupt
 被测功能  : UT003_soc_rtc_interrupt
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_soc_rtc_interrupt, UT003_soc_rtc_interrupt)
{
    int ret = 0;
    int irq;
    
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(readl).stubs().will(invoke(readl_true));
    MOCKER(rtc_update_irq).stubs().will(returnValue(0));

    ret = test_soc_rtc_interrupt();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/   
    EXPECT_EQ(1,ret);   
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}
#endif

/*****************************************************************************
 被测函数  : hi6210_rtc_shutdown
 被测功能  : UT001_hi6210_rtc_shutdown
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_hi6210_rtc_shutdown, UT001_hi6210_rtc_shutdown)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(get_pd_charge_flag).stubs().will(returnValue(1));

	ret = test_hi6210_rtc_shutdown();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
	EXPECT_EQ(0,ret);
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();

}

/*****************************************************************************
 被测函数  : hi6210_rtc_shutdown
 被测功能  : UT002_hi6210_rtc_shutdown
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_hi6210_rtc_shutdown, UT002_hi6210_rtc_shutdown)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(get_pd_charge_flag).stubs().will(returnValue((unsigned int) 0));
	MOCKER(pmu_write_alarm).stubs().will(returnValue(0));
	MOCKER(pmu_set_alarm_time).stubs().will(returnValue(0));
	ret = test_hi6210_rtc_shutdown();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
	EXPECT_EQ(0,ret);
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}

/*****************************************************************************
 被测函数  : hi6210_rtc_remove
 被测功能  : UT001_hi6210_rtc_remove
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_hi6210_rtc_remove, UT001_hi6210_rtc_remove)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(dev_get_drvdata).stubs().will(invoke(rtc_dev_get_drvdata));
	MOCKER(dev_set_drvdata).stubs().will(returnValue(0));
	MOCKER(__arm_ioremap).stubs().will(returnValue((void *)1));
	MOCKER(__arm_iounmap).stubs().will(invoke(ut__arm_iounmap));
	MOCKER(__ioremap).stubs().will(returnValue((void *)0));
	MOCKER(__iounmap).stubs().will(invoke(ut_iounmap));
	MOCKER(free_irq).stubs().will(returnValue(0));
	MOCKER(rtc_device_unregister).stubs().will(returnValue(0));
	MOCKER(kfree).stubs().will(returnValue(0));

	ret = test_hi6210_rtc_remove();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
	EXPECT_EQ(0,ret);    
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}

/*****************************************************************************
 被测函数  : hi6210_rtc_probe
 被测功能  : UT001_hi6210_rtc_probe_nodev
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_hi6210_rtc_probe, UT001_hi6210_rtc_probe_nodev)
{
    
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
    	MOCKER(hisi_lookup_va).stubs().will(returnValue((unsigned long)0));
    
	ret = test_hi6210_rtc_probe_nodev();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
	EXPECT_EQ(-ENODEV,ret);
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
    	GlobalMockObject::reset();
}

/*****************************************************************************
 被测函数  : hi6210_rtc_probe
 被测功能  : UT002_hi6210_rtc_probe_nomem
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_hi6210_rtc_probe, UT002_hi6210_rtc_probe_nomem)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(devm_kmalloc).stubs().will(returnValue((void *)0));
	MOCKER(hisi_lookup_va).stubs().will(returnValue((unsigned long)0));

	ret = test_hi6210_rtc_probe();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
	EXPECT_EQ(-ENOMEM,ret);
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}

/*****************************************************************************
 被测函数  : hi6210_rtc_probe
 被测功能  : UT003_hi6210_rtc_probe_noent
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_hi6210_rtc_probe, UT003_hi6210_rtc_probe_noent)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(devm_kmalloc).stubs().will(returnValue((void *)&prtc));
	MOCKER(platform_get_irq_byname).stubs().will(returnValue(-1));
	MOCKER(kfree).stubs().will(returnValue(0));
	MOCKER(dev_set_drvdata).stubs().will(returnValue(0));
	MOCKER(hisi_lookup_va).stubs().will(returnValue((unsigned long)0));
	
	ret = test_hi6210_rtc_probe();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
	EXPECT_EQ(-ENOENT,ret);
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}

/*****************************************************************************
 被测函数  : hi6210_rtc_probe
 被测功能  : UT004_hi6210_rtc_probe_eio
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_hi6210_rtc_probe, UT004_hi6210_rtc_probe_eio)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(devm_kmalloc).stubs().will(returnValue((void *)&prtc));
	MOCKER(platform_get_irq_byname).stubs().will(returnValue(1));
	MOCKER(__arm_ioremap).stubs().will(returnValue((void *)0));
	MOCKER(__ioremap).stubs().will(returnValue((void *)0));
	MOCKER(__iounmap).stubs().will(invoke(ut_iounmap));
	MOCKER(kfree).stubs().will(returnValue(0));
	MOCKER(dev_set_drvdata).stubs().will(returnValue(0));
	MOCKER(hisi_lookup_va).stubs().will(returnValue((unsigned long)0));
	ret = test_hi6210_rtc_probe();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
	EXPECT_EQ(-EIO,ret);
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}

/*****************************************************************************
 被测函数  : hi6210_rtc_probe
 被测功能  : UT005_hi6210_rtc_probe_eio
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_hi6210_rtc_probe, UT005_hi6210_rtc_probe_eio)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(devm_kmalloc).stubs().will(returnValue((void *)&prtc));
	MOCKER(platform_get_irq_byname).stubs().will(returnValue(1));
	MOCKER(__arm_ioremap).stubs().will(returnValue((void *)0));
	MOCKER(__ioremap).stubs().will(returnValue((void *)0));
	MOCKER(__iounmap).stubs().will(invoke(ut_iounmap));
	MOCKER(kfree).stubs().will(returnValue(0));
	MOCKER(dev_set_drvdata).stubs().will(returnValue(0));
	MOCKER(hisi_lookup_va).stubs().will(returnValue((unsigned long)0));
	ret = test_hi6210_rtc_probe();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
	EXPECT_EQ(-EIO,ret);
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}

/*****************************************************************************
 被测函数  : hi6210_rtc_probe
 被测功能  : UT006_hi6210_rtc_probe_NULL
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_hi6210_rtc_probe, UT006_hi6210_rtc_probe_NULL)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(devm_kmalloc).stubs().will(returnValue((void *)&prtc));
	MOCKER(platform_get_irq_byname).stubs().will(returnValue(1));
	MOCKER(__arm_ioremap).stubs().will(returnValue((void *)1));
	MOCKER(__ioremap).stubs().will(returnValue((void *)0));
	MOCKER(__iounmap).stubs().will(invoke(ut_iounmap));
	MOCKER(rtc_device_register).stubs().will(returnValue((rtc_device *)0));
	MOCKER(rtc_device_unregister).stubs().will(returnValue(0));
	MOCKER(kfree).stubs().will(returnValue(0));
	MOCKER(dev_set_drvdata).stubs().will(returnValue(0));
	MOCKER(device_init_wakeup).stubs().will(returnValue(0));
	MOCKER(hisi_lookup_va).stubs().will(returnValue((unsigned long)0));
	
	ret = test_hi6210_rtc_probe();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
	EXPECT_EQ(-5,ret);
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}


/*****************************************************************************
 被测函数  : hi6210_rtc_probe
 被测功能  : UT007_hi6210_rtc_probe_irq
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_hi6210_rtc_probe, UT007_hi6210_rtc_probe_irq)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(devm_kmalloc).stubs().will(returnValue((void *)&prtc));
	MOCKER(platform_get_irq_byname).stubs().will(returnValue(1));
	MOCKER(__arm_ioremap).stubs().will(returnValue((void *)1));	
	MOCKER(__arm_iounmap).stubs().will(invoke(ut__arm_iounmap));
	MOCKER(__ioremap).stubs().will(returnValue((void *)1));
	MOCKER(__iounmap).stubs().will(invoke(ut_iounmap));
	MOCKER(rtc_device_register).stubs().will(returnValue((rtc_device *)1));
	MOCKER(request_threaded_irq).stubs().will(returnValue(1));
	MOCKER(kfree).stubs().will(returnValue(0));
	MOCKER(device_init_wakeup).stubs().will(returnValue(0));
	MOCKER(dev_set_drvdata).stubs().will(returnValue(0));
	MOCKER(hisi_lookup_va).stubs().will(returnValue((unsigned long)0));
	MOCKER(rtc_device_unregister).stubs().will(invoke(ut_rtc_device_unregister));
	
	ret = test_hi6210_rtc_probe();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
	EXPECT_EQ(-EIO,ret);
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}

/*****************************************************************************
 被测函数  : hi6210_rtc_probe
 被测功能  : UT008_hi6210_rtc_probe_zero
 用例条件  :

 修改历史      :
  1.日    期   : 2014年4月10日
    作    者   : 乔志华 WX205565
    修改内容   : 新生成UT用例

*****************************************************************************/

TEST(test_test_hi6210_rtc_probe, UT008_hi6210_rtc_probe_zero)
{
	int ret = 0;
    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/

    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(devm_kmalloc).stubs().will(returnValue((void *)&prtc));
	MOCKER(platform_get_irq_byname).stubs().will(returnValue(1));
	MOCKER(__arm_ioremap).stubs().will(returnValue((void *)1));
	MOCKER(__ioremap).stubs().will(returnValue((void *)1));
	MOCKER(__iounmap).stubs().will(invoke(ut_iounmap));
	MOCKER(rtc_device_register).stubs().will(returnValue((rtc_device *)1));
	MOCKER(request_threaded_irq).stubs().will(returnValue(0));
	MOCKER(rtc_device_unregister).stubs().will(returnValue(0));
	MOCKER(hi6xxx_pmic_reg_write).stubs().will(returnValue(0));
	MOCKER(pmu_get_time).stubs().will(returnValue(0));
	MOCKER(pmu_read_alarm).stubs().will(returnValue(0));
	MOCKER(get_pd_charge_flag).stubs().will(returnValue((unsigned int)0));
	MOCKER(kfree).stubs().will(returnValue(0));
	MOCKER(dev_set_drvdata).stubs().will(returnValue(0));
	MOCKER(device_init_wakeup).stubs().will(returnValue(0));
	MOCKER(hisi_lookup_va).stubs().will(returnValue((unsigned long)0));
    MOCKER(init_timer_key).stubs().will(invoke(ut_init_timer_key));
    MOCKER(add_timer).stubs().will(invoke(ut_add_timer));
    
	
	ret = test_hi6210_rtc_probe();
    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
	EXPECT_EQ(0,ret);
    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/
	GlobalMockObject::reset();
}
