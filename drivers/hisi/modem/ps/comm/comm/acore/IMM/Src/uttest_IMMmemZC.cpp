/******************************************************************************

                  版权所有 (C), 2001-2011, 华为技术有限公司

 ******************************************************************************
  文 件 名   : test_immzc.cpp
  版 本 号   : 初稿
  作    者   :
  生成日期   : 2014年05月15日
  最近修改   :
  功能描述   : UT测试脚本
  函数列表   :
  修改历史   :
  1.日    期   : 2013年01月29日
    作    者   :
    修改内容   : 创建文件

******************************************************************************/

/*****************************************************************************
  1 头文件包含
*****************************************************************************/
#include "gtest/gtest.h"
#include "llt_mockcpp.h"

using namespace testing;

#ifdef __cplusplus
extern "C"
{
#endif
/* Test case */
extern unsigned char *test_IMM_ZcStaticAlloc_Debug(void);
extern int test_IMM_ZcAddMacHead(int iTestStep);
extern int test_IMM_ZcRemoveMacHead(int iTestStep);
extern int test_IMM_ZcAddMacHeadCmp(unsigned char *ucCmpbuff);
extern unsigned char * test_IMM_ZcPush_Debug(void);
extern unsigned char * test_IMM_ZcPull_Debug(void);
extern unsigned char * test_IMM_ZcPut_Debug(void);
extern int test_IMM_ZcReserve_Debug(void);
extern int test_IMM_ZcGetUsedLen(int iTestStep);
extern int test_IMM_ZcGetUserApp(void);
extern int test_IMM_ZcSetUserApp(void);
extern int test_IMM_ZcQueueHeadInit_Debug(void);
extern int test_IMM_ZcQueueHead_Debug(void);
extern int test_IMM_ZcQueueTail_Debug(void);
extern int test_IMM_ZcDequeueHead_Debug(void);
extern int test_IMM_ZcDequeueTail_Debug(void);
extern int test_IMM_ZcQueueLen_Debug(void);


/* extern kernel function */
extern unsigned char *skb_pull(void *skb, unsigned int len);
extern unsigned char *skb_push(void *skb, unsigned int len);
extern unsigned char *skb_put(void *skb, unsigned int len);
extern void *__netdev_alloc_skb(void *dev, unsigned int length, unsigned int gfp_mask);

extern int __raw_spin_lock_init();
extern int _raw_spin_lock_irqsave();
extern int _raw_spin_unlock_irqrestore();

#ifdef __cplusplus
}
#endif



TEST(test_test_IMM_ZcStaticAlloc_Debug, ImmZcAllocTest01)
{
	unsigned char buf[80] = {0};
	unsigned char *pucImmZc;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/
	MOCKER(__netdev_alloc_skb).stubs().will(returnValue((void *)&buf[0]));

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    pucImmZc = test_IMM_ZcStaticAlloc_Debug();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
	EXPECT_EQ(&buf[0], pucImmZc);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcAddMacHead, ImmZcAddMacHeadTest01)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    iRet = test_IMM_ZcAddMacHead(0);

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(-1, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcAddMacHead, ImmZcAddMacHeadTest02)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    iRet = test_IMM_ZcAddMacHead(1);

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(-1, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcAddMacHead, ImmZcAddMacHeadTest03)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    iRet = test_IMM_ZcAddMacHead(2);

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(-1, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcAddMacHead, ImmZcAddMacHeadTest04)
{
	int iRet = 0;
	unsigned char buf[80] = "fail";

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

	MOCKER(skb_push).stubs().will(returnValue((unsigned char *)&buf[0]));

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    iRet = test_IMM_ZcAddMacHead(3);

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0, iRet);
	EXPECT_EQ(0, test_IMM_ZcAddMacHeadCmp((unsigned char *)&buf[0]));

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcRemoveMacHead, ImmZcRemoveMacHeadTest01)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    iRet = test_IMM_ZcRemoveMacHead(0);

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(-1, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcRemoveMacHead, ImmZcRemoveMacHeadTest02)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    iRet = test_IMM_ZcRemoveMacHead(1);

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(-1, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcRemoveMacHead, ImmZcRemoveMacHeadTest03)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    iRet = test_IMM_ZcRemoveMacHead(2);

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcPush_Debug, ImmZcPushTest01)
{
	unsigned char * pucImmZc;
	unsigned char buf[80] = {0};

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

	MOCKER(skb_push).stubs().will(returnValue(&buf[0]));

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    pucImmZc = test_IMM_ZcPush_Debug();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(&buf[0], pucImmZc);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcPull_Debug, ImmZcPullTest01)
{
	unsigned char * pucImmZc;
	unsigned char buf[80] = {0};

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

	MOCKER(skb_pull).stubs().will(returnValue(&buf[0]));

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    pucImmZc = test_IMM_ZcPull_Debug();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(&buf[0], pucImmZc);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcPut_Debug, ImmZcPutTest01)
{
	unsigned char * pucImmZc;
	unsigned char buf[80] = {0};

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

	MOCKER(skb_put).stubs().will(returnValue(&buf[0]));

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    pucImmZc = test_IMM_ZcPut_Debug();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(&buf[0], pucImmZc);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcReserve_Debug, ImmZcReserveTest01)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    test_IMM_ZcReserve_Debug();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_ZcGetUsedLen, ImmZcGetUsedLenTest01)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    iRet = test_IMM_ZcGetUsedLen(0);

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(-1, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_ZcGetUsedLen, ImmZcGetUsedLenTest02)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    iRet = test_IMM_ZcGetUsedLen(1);

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcGetUserApp, ImmZcGetUserAppTest01)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    iRet = test_IMM_ZcGetUserApp();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcSetUserApp, ImmZcSetUserAppTest01)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    iRet = test_IMM_ZcSetUserApp();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcQueueHeadInit_Debug, ImmZcQueueHeadInitTest01)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(__raw_spin_lock_init).stubs().will(returnValue(0));

    iRet = test_IMM_ZcQueueHeadInit_Debug();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcQueueHead_Debug, ImmZcQueueHeadTest01)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(__raw_spin_lock_init).stubs().will(returnValue(0));
	MOCKER(_raw_spin_lock_irqsave).stubs().will(returnValue(0));
	MOCKER(_raw_spin_unlock_irqrestore).stubs().will(returnValue(0));

    iRet = test_IMM_ZcQueueHead_Debug();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcQueueTail_Debug, ImmZcQueueTailTest01)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(__raw_spin_lock_init).stubs().will(returnValue(0));
	MOCKER(_raw_spin_lock_irqsave).stubs().will(returnValue(0));
	MOCKER(_raw_spin_unlock_irqrestore).stubs().will(returnValue(0));

    iRet = test_IMM_ZcQueueTail_Debug();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcDequeueHead_Debug, ImmZcDeQueueHeadTest01)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

	MOCKER(__raw_spin_lock_init).stubs().will(returnValue(0));
	MOCKER(_raw_spin_lock_irqsave).stubs().will(returnValue(0));
	MOCKER(_raw_spin_unlock_irqrestore).stubs().will(returnValue(0));

    iRet = test_IMM_ZcDequeueHead_Debug();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcDequeueTail_Debug, ImmZcDeQueueTailTest01)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/
	MOCKER(__raw_spin_lock_init).stubs().will(returnValue(0));
	MOCKER(_raw_spin_lock_irqsave).stubs().will(returnValue(0));
	MOCKER(_raw_spin_unlock_irqrestore).stubs().will(returnValue(0));

    iRet = test_IMM_ZcDequeueTail_Debug();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}
TEST(test_test_IMM_ZcQueueLen_Debug, ImmZcQueueLenTest01)
{
	int iRet = 0;

    /*************************************************************************
      (1)初始化测试环境
    *************************************************************************/


    /*************************************************************************
      (2)设置被测函数形参
    *************************************************************************/

    /*************************************************************************
      (3)执行被测函数
    *************************************************************************/

    iRet = test_IMM_ZcQueueLen_Debug();

    /*************************************************************************
      (4)检测测试结果
    *************************************************************************/
    EXPECT_EQ(0, iRet);

    /*************************************************************************
      (5)清理测试环境
    *************************************************************************/

	/* 还原打的函数桩 */
    GlobalMockObject::reset();
}



